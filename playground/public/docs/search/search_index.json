{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MoBrix-ui","text":"<p>Smart React components for every app, easily customizable for every purpose.</p> <p></p> <p> </p> <p></p> <p></p> <p></p>"},{"location":"#note-for-older-mobrix-ui-version","title":"Note for older MoBrix-ui version","text":"<p>MoBrix-ui v3 introduces some breaking changes that makes it not compatible with older MoBrix verions (using different lib versions in parallel is possible, but can cause some unexpected errors). If you are using MoBrix 2.X.X or lower, upgrade it to v3.X.X if possible! Please read the old versions guide if you want to use older MoBrix-ui versions.</p> <p></p>"},{"location":"#mobrix-ui-philosophy","title":"MoBrix-ui philosophy","text":"<p>This library is built upon few (but important) concepts:</p> <ul> <li>Small library size, to not impact on final app bundle size</li> <li>Few dependencies, to not introduce a bunch of additional packages (that could also introduce bugs or version conflicts with pre-existent packages)</li> <li>Let the user customize every part as desired, but with default values set otherwise, to make every component ready to be used without so many parameters</li> <li>Every component should be integrable into every react app, so their behaviour must be customizable too (with callbacks, for example)</li> </ul> <p>The same concepts are also the base of another project I maintain, MoBrix-engine (check it out, it is also the base of MoBrix-ui guide page !)</p> <p></p>"},{"location":"#components-building-process","title":"Components building process","text":"<p>This library use a standardized process to build every component. As result, every component has a shared initial logic, shared CSS styles and shared properties. Some properties are shared between all components, for a smoother dev experience. In addition, this makes every single component easily re-usable.</p> <p></p>"},{"location":"#shared-properties","title":"Shared Properties","text":"<p>MoBrix-ui components shares some properties:</p> Parameter Type Default key string / className string / dark boolean false hide boolean false id string / shadow boolean true style CSSProperties / unstyled boolean false animated boolean true animation <code>fade-in</code> | <code>slide-in-left</code> | <code>slide-in-right</code> | <code>slide-in-top</code> | <code>shake</code> / background boolean true hover boolean true disabled boolean false onKeyDown (keyEvent : any) =&gt; void / onFocus () =&gt; void / onFocusLost () =&gt; void / additionalProps Record / a11y boolean true a11yLabel string / tabIndex number | string / <p></p> <p>Check out the complete components list for more details</p> <p></p>"},{"location":"#css-variables","title":"CSS variables","text":"<p>MoBrix-ui is globally configurable, with CSS variables. By defining some specific custom CSS variables into your app css, you'll change the UI of all components:</p> Css variable Fallback Default --mbx-background / / --mbx-background-light --mbx-background linear-gradient(to right, #fff, #ededee, #e6e7e7) --mbx-background-dark --mbx-background linear-gradient(to right, #2d3748, #1d232e) --mbx-background-color / / --mbx-background-color-light --mbx-background-color #e9e9e9 --mbx-background-color-dark --mbx-background-color #1d232e --mbx-background-color-hover / / --mbx-background-color-hover-light --mbx-background-color-hover #dfeaf8 --mbx-background-color-hover-dark --mbx-background-color-hover #3a3552 --mbx-background-hover / / --mbx-background-hover-light --mbx-background-hover linear-gradient(to right, #ececec, #e1e1e6, #dbdddd) --mbx-background-hover-dark --mbx-background-hover linear-gradient(to right, #364257, #252d3b) --mbx-text-color / / --mbx-text-color-light --mbx-text-color #1b1b1b --mbx-text-color-dark --mbx-text-color white --mbx-text-color-hover / / --mbx-text-color-hover-light --mbx-text-color-hover #413c5c --mbx-text-color-hover-dark --mbx-text-color-hover #dfeaf8 --mbx-shadow / / --mbx-shadow-light --mbx-shadow #464545 --mbx-shadow-dark --mbx-shadow #464545 --mbx-focus-color / / --mbx-focus-color-light --mbx-focus-color #7785ff --mbx-focus-color-dark --mbx-focus-color #fb7a10 <p></p> <p>Check out the complete components list for more details</p> <p></p>"},{"location":"#reactive-components","title":"Reactive components","text":"<p>Some components are designed with a specific structure, to sync their internal state with an external input value. This kind of component handle internally their actual value, using the <code>value</code> parameter as starting point. This let the component to be driven in 2 different way:</p> <ul> <li> <p>Internally, Its internal <code>value</code>, when using the component without changing its value parameter from code</p> </li> <li> <p>External, passing the <code>value</code> parameter</p> </li> </ul> <p>So, we have 2 scenarios:</p> <ul> <li> <p>If you change the component value   using the component (without changing the <code>value</code> parameter), it will be updated internally.</p> </li> <li> <p>If you change the passed <code>value</code> parameter, the component will sync its value with the given one.</p> </li> </ul> <p>A clear example is the Input component. When changing the <code>value</code> parameter, the component will sync its actual value.</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"#getting-started","title":"Getting started","text":""},{"location":"#installation","title":"Installation","text":"<p>If you want to use this library inside your project, just install it:</p> <pre><code>\nnpm i mobrix-ui\n\n</code></pre> <p></p>"},{"location":"#usage","title":"Usage","text":"<p>After installation, you can use every <code>MoBrix-ui</code> component in your app. Run this example to see them in action:</p> <pre><code>import { Card, Container, Link } from \"mobrix-ui\";\nimport { render } from \"react-dom\";\n\nrender(\n  &lt;Container animated&gt;\n    &lt;Card\n      dark={true}\n      body={&lt;p&gt;This page is entirely made with MoBrix-ui components !&lt;/p&gt;}\n      footer={\n        &lt;Link to=\"https://cianciarusocataldo.github.io/mobrix-ui\"&gt;\n          MoBrix-ui page\n        &lt;/Link&gt;\n      }\n    /&gt;\n  &lt;/Container&gt;,\n  document.getElementById(\"root\"),\n);\n</code></pre> <p></p> <p></p> <p>If you want to customize the UI globally, initialize the dedicated CSS variables:</p> <pre><code>* {\n  --mbx-ui-text-color: #f5f5f5;\n  --mbx-ui-background-color: #1b1b1b;\n}\n</code></pre> <p></p> <p></p> <p></p>"},{"location":"#tests","title":"Tests","text":"<p>Unit tests for every component are located inside <code>tests</code> folder. The test script is executed with pre-defined test command:</p> <pre><code>npm run test\n</code></pre> <p></p>"},{"location":"#authors","title":"Authors","text":"<ul> <li>Cataldo Cianciaruso</li> </ul>"},{"location":"Changelog/","title":"MoBrix-ui changelog","text":""},{"location":"Changelog/#versions","title":"Versions","text":"<ul> <li>3.10.0</li> <li>3.9.0</li> <li>3.8.0</li> <li>3.7.0</li> <li>3.6.0</li> <li>3.5.0</li> <li>3.4.0</li> <li>3.3.0</li> <li>3.2.0</li> <li>3.1.0</li> <li>3.0.0</li> <li>2.1.0</li> <li>2.0.0</li> <li>1.2.0</li> <li>1.1.0</li> <li>1.0.0</li> </ul>"},{"location":"Changelog/#changes","title":"Changes","text":""},{"location":"Changelog/#3100","title":"3.10.0","text":"<ul> <li><code>data-mb-enabled</code> migrated to <code>data-mbx-attributes</code> field. If the component is disabled, the <code>data-mbx-attributes</code> contains <code>disabled</code> string</li> <li><code>data-mbx-a11y</code> migrated to <code>data-mbx-attributes</code> field. If <code>a11y = true</code>, the <code>data-mbx-attributes</code> contains <code>a11y</code> string</li> <li><code>data-mbx-animated</code> migrated to <code>data-mbx-attributes</code> field. If <code>animated = true</code>, the <code>data-mbx-attributes</code> contains <code>animated</code> string</li> <li><code>data-mbx-animation</code> migrated to <code>data-mbx-features</code> field. If <code>animated = true</code> and <code>animation</code> prop is set, the <code>data-mbx-features</code> contains it (with <code>anim-</code> prefix, ex. <code>anim-fade-in</code>)</li> <li><code>data-mbx-a11y-dark</code> removed</li> <li>Clean-up</li> </ul>"},{"location":"Changelog/#390","title":"3.9.0","text":"<ul> <li><code>arrowClassName</code> parameter for <code>Calendar</code>, <code>Carousel</code> and <code>Drawer</code> components</li> <li>css variables splitted into full theme (for future v4 updates)</li> <li>Opacity reduced on hover instead of specific hover colors, to optimize overall library size and in preparation for v4 update</li> <li><code>data-mbx-features</code> field, to easily handle multiple features through css selectors</li> <li><code>data-mbx-hover</code>, <code>data-mbx-shadow</code>, <code>data-mbx-background</code> and <code>data-mbx-dark</code> unified in a single field, <code>data-mbx-attributes</code></li> </ul>"},{"location":"Changelog/#380","title":"3.8.0","text":"<ul> <li>Ui improvements and fix</li> <li>Refactoring</li> <li>Bundle size reduced</li> <li>New shared property, <code>animation</code>, to customize components animation when they are rendered</li> <li>New global css variables, to customize shadow colors:</li> <li><code>--mbx-shadow</code></li> <li><code>--mbx-shadow-light</code></li> <li><code>--mbx-shadow-dark</code></li> </ul>"},{"location":"Changelog/#370","title":"3.7.0","text":"<ul> <li><code>CodeBox</code> component refactoring:</li> <li><code>noCopyButton</code> properties removed</li> <li><code>copyButton</code> properties used instead (enable/disable copy button)</li> <li>Multiline strings are now supported</li> <li>Clean-up</li> </ul>"},{"location":"Changelog/#360","title":"3.6.0","text":"<ul> <li><code>Image</code> component</li> <li>Clean-up</li> <li>Better automatic release system</li> <li>Docs updated</li> </ul>"},{"location":"Changelog/#350","title":"3.5.0","text":"<ul> <li>Clean-up</li> <li>Refactoring</li> <li>Reduced bundle size</li> <li>Comments generator fix</li> <li>New automatic release creation system</li> <li>New automatic publish system</li> </ul>"},{"location":"Changelog/#340","title":"3.4.0","text":"<ul> <li><code>EmbeddedVideo</code> component</li> <li>Clean-up</li> </ul>"},{"location":"Changelog/#330","title":"3.3.0","text":"<ul> <li>Slider fix</li> <li>IconButton highlight fix on mobile</li> <li>All components now use new building functions (<code>buildMbxReactiveComponent</code> and <code>buildMbxStandardComponent</code>)</li> </ul>"},{"location":"Changelog/#320","title":"3.2.0","text":"<ul> <li>New DatePicker css vars, to customize its internal modal</li> <li><code>--mbx-datepicker-modal-background-light</code>,</li> <li><code>--mbx-datepicker-modal-background-dark</code>,</li> <li><code>--mbx-datepicker-modal-x-color-light</code>,</li> <li><code>--mbx-datepicker-modal-x-color-dark</code>,</li> <li><code>--mbx-datepicker-modal-x-color-hover-light</code>,</li> <li><code>--mbx-datepicker-modal-x-color-hover-dark</code></li> <li>Clean-up</li> <li>New CI workflow to publish MoBrix-ui package to github registry</li> <li>Automatic css variables docs generation</li> </ul>"},{"location":"Changelog/#310","title":"3.1.0","text":"<ul> <li>New Card properties (<code>headerClassName</code>, <code>headerProps</code>, <code>bodyClassName</code>, <code>bodyProps</code>, <code>footerClassName</code>, <code>footerProps</code>)</li> <li>Clean-up</li> <li>Minor improvements</li> </ul>"},{"location":"Changelog/#300","title":"3.0.0","text":"<ul> <li>No more external dependencies</li> <li>Totally re-designed css variables system, to fully customize every component at once</li> <li>Docs and comments generator</li> <li>Global refactoring and huge clean-up</li> </ul>"},{"location":"Changelog/#210","title":"2.1.0","text":"<ul> <li><code>TabViewer</code> component</li> <li>Minor fixes</li> </ul>"},{"location":"Changelog/#200","title":"2.0.0","text":"<ul> <li><code>Calendar</code> component</li> <li><code>DatePicker</code> component</li> <li><code>Popup</code> component</li> <li><code>Selector</code> component</li> <li><code>Slider</code> component</li> <li><code>RadioButtonGroup</code> component</li> <li><code>RadioButton</code> component</li> <li><code>Reactive components</code> replace old <code>Box Components</code>, mantaining only the automatic input value sync with actual value set</li> <li>Better overall performance</li> <li>Huge cleanup</li> <li>Deep refactoring</li> <li>Minor fixes</li> </ul>"},{"location":"Changelog/#120","title":"1.2.0","text":"<ul> <li><code>Carousel</code> arrow fix</li> <li><code>ExpandableContainer</code> arrow fix</li> <li><code>FacebookButtons</code> component</li> </ul>"},{"location":"Changelog/#110","title":"1.1.0","text":"<ul> <li><code>readonly</code> support for <code>Rater</code> component</li> <li><code>Review</code> component</li> <li>Clean-up</li> </ul>"},{"location":"Changelog/#100","title":"1.0.0","text":"<ul> <li>MoBrix-ui-components library setup</li> </ul>"},{"location":"License/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2024 Cataldo Cianciaruso</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"components/","title":"MoBrix-ui components","text":""},{"location":"components/#summary","title":"Summary","text":"<p>Atoms</p> <ul> <li> <p>Button</p> </li> <li> <p>CheckBox</p> </li> <li> <p>CodeBox</p> </li> <li> <p>Counter</p> </li> <li> <p>Divider</p> </li> <li> <p>EmbeddedVideo</p> </li> <li> <p>IconButton</p> </li> <li> <p>Image</p> </li> <li> <p>Input</p> </li> <li> <p>Label</p> </li> <li> <p>Link</p> </li> <li> <p>RadioButton</p> </li> <li> <p>Rater</p> </li> <li> <p>Selector</p> </li> <li> <p>Slider</p> </li> <li> <p>Spinner</p> </li> <li> <p>Toggle</p> </li> </ul> <p>Molecules</p> <ul> <li> <p>Card</p> </li> <li> <p>Carousel</p> </li> <li> <p>Container</p> </li> <li> <p>DismissableCard</p> </li> <li> <p>Dropdown</p> </li> <li> <p>ExpandableContainer</p> </li> <li> <p>FormField</p> </li> <li> <p>List</p> </li> <li> <p>Modal</p> </li> <li> <p>Popup</p> </li> <li> <p>RadioButtonGroup</p> </li> <li> <p>Review</p> </li> <li> <p>Table</p> </li> <li> <p>TabViewer</p> </li> </ul> <p>Organisms</p> <ul> <li> <p>Calendar</p> </li> <li> <p>DatePicker</p> </li> <li> <p>Drawer</p> </li> <li> <p>Form</p> </li> </ul>"},{"location":"components/atoms/","title":"MoBrix-ui atoms","text":""},{"location":"components/atoms/#summary","title":"Summary","text":"<ul> <li>Button</li> <li>CheckBox</li> <li>CodeBox</li> <li>Counter</li> <li>Divider</li> <li>EmbeddedVideo</li> <li>IconButton</li> <li>Image</li> <li>Input</li> <li>Label</li> <li>Link</li> <li>RadioButton</li> <li>Rater</li> <li>Selector</li> <li>Slider</li> <li>Spinner</li> <li>Toggle</li> </ul>"},{"location":"components/atoms/Button/","title":"Button page","text":"<p>A button component, designed for a lot of scenarios.</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Button/css-vars/","title":"Button CSS variables","text":""},{"location":"components/atoms/Button/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Button/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-button-background / / --mbx-button-background-light --mbx-button-background --mbx-background-light --mbx-button-background-dark --mbx-button-background --mbx-background-dark --mbx-button-text-color / / --mbx-button-text-color-light --mbx-button-text-color --mbx-text-color-light --mbx-button-text-color-dark --mbx-button-text-color --mbx-text-color-dark --mbx-button-background-hover / / --mbx-button-background-hover-light --mbx-button-background-hover --mbx-background-hover-light --mbx-button-background-hover-dark --mbx-button-background-hover --mbx-background-hover-dark --mbx-button-text-color-hover / / --mbx-button-text-color-hover-light --mbx-button-text-color-hover --mbx-text-color-hover-light --mbx-button-text-color-hover-dark --mbx-button-text-color-hover --mbx-text-color-hover-dark"},{"location":"components/atoms/Button/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Button/css-vars/#-mbx-button-background","title":"--mbx-button-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-button-background-light</code> and <code>mbx-button-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-background-light","title":"--mbx-button-background-light","text":"Fallback Default --mbx-button-background --mbx-background-light <p>Button background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-background-dark","title":"--mbx-button-background-dark","text":"Fallback Default --mbx-button-background --mbx-background-dark <p>Button background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-text-color","title":"--mbx-button-text-color","text":"Fallback Default / / <p>Fallback value for <code>mbx-button-text-color-light</code> and <code>mbx-button-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-text-color-light","title":"--mbx-button-text-color-light","text":"Fallback Default --mbx-button-text-color --mbx-text-color-light <p>Button text color when dark mode is off</p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-text-color-dark","title":"--mbx-button-text-color-dark","text":"Fallback Default --mbx-button-text-color --mbx-text-color-dark <p>Button text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-background-hover","title":"--mbx-button-background-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-button-background-hover-light</code> and <code>mbx-button-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-background-hover-light","title":"--mbx-button-background-hover-light","text":"Fallback Default --mbx-button-background-hover --mbx-background-hover-light <p>Button background when dark mode is off, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-background-hover-dark","title":"--mbx-button-background-hover-dark","text":"Fallback Default --mbx-button-background-hover --mbx-background-hover-dark <p>Button background when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-text-color-hover","title":"--mbx-button-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-button-text-color-hover-light</code> and <code>mbx-button-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-text-color-hover-light","title":"--mbx-button-text-color-hover-light","text":"Fallback Default --mbx-button-text-color-hover --mbx-text-color-hover-light <p>Button text color when dark mode is off, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Button/css-vars/#-mbx-button-text-color-hover-dark","title":"--mbx-button-text-color-hover-dark","text":"Fallback Default --mbx-button-text-color-hover --mbx-text-color-hover-dark <p>Button text color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/atoms/Button/props/","title":"Button properties","text":""},{"location":"components/atoms/Button/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Button/props/#props-table","title":"Props table","text":"Parameter Type Default onMouseEnter () =&gt; void / onMouseLeave () =&gt; void / onClick () =&gt; void () =&gt; {} children JSX.Element | string /"},{"location":"components/atoms/Button/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Button/props/#onmouseenter","title":"onMouseEnter","text":"Type Default () =&gt; void / <p>This callback is triggered everytime the cursor enter the button area</p> <p></p> <p></p>"},{"location":"components/atoms/Button/props/#onmouseleave","title":"onMouseLeave","text":"Type Default () =&gt; void / <p>This callback is triggered everytime the cursor exit the button area</p> <p></p> <p></p>"},{"location":"components/atoms/Button/props/#onclick","title":"onClick","text":"Type Default () =&gt; void () =&gt; {} <p>Callback triggered when Button component is clicked</p> <p></p> <p></p>"},{"location":"components/atoms/Button/props/#children","title":"children","text":"Type Default JSX.Element | string / <p>Button content</p> <p></p>"},{"location":"components/atoms/CheckBox/","title":"CheckBox page","text":"<p>A checkbox element, totally customizable.</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/CheckBox/css-vars/","title":"CheckBox CSS variables","text":""},{"location":"components/atoms/CheckBox/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/CheckBox/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-checkbox-background / / --mbx-checkbox-background-light --mbx-checkbox-background --mbx-background-light --mbx-checkbox-background-dark --mbx-checkbox-background --mbx-background-dark --mbx-checkbox-background-hover / / --mbx-checkbox-background-hover-light --mbx-checkbox-background-hover --mbx-background-hover-light --mbx-checkbox-background-hover-dark --mbx-checkbox-background-hover --mbx-background-hover-dark --mbx-checkbox-tick-color / / --mbx-checkbox-tick-color-light --mbx-checkbox-tick-color rgb(37, 99, 235) --mbx-checkbox-tick-color-dark --mbx-checkbox-tick-color white"},{"location":"components/atoms/CheckBox/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/CheckBox/css-vars/#-mbx-checkbox-background","title":"--mbx-checkbox-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-checkbox-background-light</code> and <code>mbx-checkbox-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/css-vars/#-mbx-checkbox-background-light","title":"--mbx-checkbox-background-light","text":"Fallback Default --mbx-checkbox-background --mbx-background-light <p>CheckBox background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/css-vars/#-mbx-checkbox-background-dark","title":"--mbx-checkbox-background-dark","text":"Fallback Default --mbx-checkbox-background --mbx-background-dark <p>CheckBox background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/css-vars/#-mbx-checkbox-background-hover","title":"--mbx-checkbox-background-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-checkbox-background-hover-light</code> and <code>mbx-checkbox-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/css-vars/#-mbx-checkbox-background-hover-light","title":"--mbx-checkbox-background-hover-light","text":"Fallback Default --mbx-checkbox-background-hover --mbx-background-hover-light <p>CheckBox background when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/css-vars/#-mbx-checkbox-background-hover-dark","title":"--mbx-checkbox-background-hover-dark","text":"Fallback Default --mbx-checkbox-background-hover --mbx-background-hover-dark <p>CheckBox background when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/css-vars/#-mbx-checkbox-tick-color","title":"--mbx-checkbox-tick-color","text":"Fallback Default / / <p>Fallback value for <code>mbx-checkbox-tick-color-light</code> and <code>mbx-checkbox-tick-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/css-vars/#-mbx-checkbox-tick-color-light","title":"--mbx-checkbox-tick-color-light","text":"Fallback Default --mbx-checkbox-tick-color rgb(37, 99, 235) <p>CheckBox tick color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/css-vars/#-mbx-checkbox-tick-color-dark","title":"--mbx-checkbox-tick-color-dark","text":"Fallback Default --mbx-checkbox-tick-color white <p>CheckBox tick color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/atoms/CheckBox/props/","title":"CheckBox properties","text":""},{"location":"components/atoms/CheckBox/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/CheckBox/props/#props-table","title":"Props table","text":"Parameter Type Default value boolean false icon JSX.Element Internal tick icon onChange (newValue: boolean) =&gt; void () =&gt; {}"},{"location":"components/atoms/CheckBox/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/CheckBox/props/#value","title":"value","text":"Type Default boolean false <p>Checkbox initial value (checked / unchecked)</p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/props/#icon","title":"icon","text":"Type Default JSX.Element Internal tick icon <p>custom tick icon (if not set, the default one will be used)</p> <p></p> <p></p>"},{"location":"components/atoms/CheckBox/props/#onchange","title":"onChange","text":"Type Default (newValue: boolean) =&gt; void () =&gt; {} <p>Callback triggered when CheckBox component input value is changed by the user</p> <p></p>"},{"location":"components/atoms/CodeBox/","title":"CodeBox page","text":"<p>A smart code box, to display code text as a compiler. Supports code highlight, with a selectable environment, and multiline strings</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/CodeBox/css-vars/","title":"CodeBox CSS variables","text":""},{"location":"components/atoms/CodeBox/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/CodeBox/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-codebox-background / / --mbx-codebox-background-light --mbx-codebox-background --mbx-background-light --mbx-codebox-background-dark --mbx-codebox-background --mbx-background-dark --mbx-codebox-text-color / / --mbx-codebox-text-color-light --mbx-codebox-text-color --mbx-text-color-light --mbx-codebox-text-color-dark --mbx-codebox-text-color --mbx-text-color-dark"},{"location":"components/atoms/CodeBox/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/CodeBox/css-vars/#-mbx-codebox-background","title":"--mbx-codebox-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-codebox-background-light</code> and <code>mbx-codebox-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/CodeBox/css-vars/#-mbx-codebox-background-light","title":"--mbx-codebox-background-light","text":"Fallback Default --mbx-codebox-background --mbx-background-light <p>CodeBox background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/CodeBox/css-vars/#-mbx-codebox-background-dark","title":"--mbx-codebox-background-dark","text":"Fallback Default --mbx-codebox-background --mbx-background-dark <p>CodeBox background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/CodeBox/css-vars/#-mbx-codebox-text-color","title":"--mbx-codebox-text-color","text":"Fallback Default / / <p>Fallback value for <code>mbx-codebox-text-color-light</code> and <code>mbx-codebox-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/CodeBox/css-vars/#-mbx-codebox-text-color-light","title":"--mbx-codebox-text-color-light","text":"Fallback Default --mbx-codebox-text-color --mbx-text-color-light <p>CodeBox text-color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/CodeBox/css-vars/#-mbx-codebox-text-color-dark","title":"--mbx-codebox-text-color-dark","text":"Fallback Default --mbx-codebox-text-color --mbx-text-color-dark <p>CodeBox text-color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/atoms/CodeBox/props/","title":"CodeBox properties","text":""},{"location":"components/atoms/CodeBox/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/CodeBox/props/#props-table","title":"Props table","text":"Parameter Type Default value string / highlight boolean true environment <code>javascript</code> | <code>python</code> | <code>terminal</code> | <code>common</code> 'terminal' copyButton boolean true"},{"location":"components/atoms/CodeBox/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/CodeBox/props/#value","title":"value","text":"Type Default string / <p>code to display - multiline string is supported</p> <p></p> <p></p>"},{"location":"components/atoms/CodeBox/props/#highlight","title":"highlight","text":"Type Default boolean true <p>Enable/disable text highlight, based on selected environment</p> <p></p> <p></p>"},{"location":"components/atoms/CodeBox/props/#environment","title":"environment","text":"Type Default <code>javascript</code> | <code>python</code> | <code>terminal</code> | <code>common</code> 'terminal' <p>environment for text highlight feature, default to 'terminal' (only enabled when 'highlight' is true)</p> <p></p> <p></p>"},{"location":"components/atoms/CodeBox/props/#copybutton","title":"copyButton","text":"Type Default boolean true <p>Enable/disable the copy button</p> <p></p>"},{"location":"components/atoms/Counter/","title":"Counter page","text":"<p>A flexible numeric input element</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Counter/css-vars/","title":"Counter CSS variables","text":""},{"location":"components/atoms/Counter/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Counter/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-counterbox-background / / --mbx-counterbox-background-light --mbx-counterbox-background --mbx-background-color-light --mbx-counterbox-background-dark --mbx-counterbox-background --mbx-background-color-dark --mbx-counterbox-text-color / / --mbx-counterbox-text-color-light --mbx-counterbox-text-color --mbx-text-color-light --mbx-counterbox-text-color-dark --mbx-counterbox-text-color --mbx-text-color-dark --mbx-counterbox-background-hover / / --mbx-counterbox-background-hover-light --mbx-counterbox-background-hover --mbx-background-color-hover-light --mbx-counterbox-background-hover-dark --mbx-counterbox-background-hover --mbx-background-color-hover-dark --mbx-counterbox-text-color-hover / / --mbx-counterbox-text-color-hover-light --mbx-counterbox-text-color-hover --mbx-text-color-hover-light --mbx-counterbox-text-color-hover-dark --mbx-counterbox-text-color-hover --mbx-text-color-hover-dark"},{"location":"components/atoms/Counter/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-background","title":"--mbx-counterbox-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-counterbox-background-light</code> and <code>mbx-counterbox-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-background-light","title":"--mbx-counterbox-background-light","text":"Fallback Default --mbx-counterbox-background --mbx-background-color-light <p>Counter background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-background-dark","title":"--mbx-counterbox-background-dark","text":"Fallback Default --mbx-counterbox-background --mbx-background-color-dark <p>Counter background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-text-color","title":"--mbx-counterbox-text-color","text":"Fallback Default / / <p>Fallback value for <code>mbx-counterbox-text-color-light</code> and <code>mbx-counterbox-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-text-color-light","title":"--mbx-counterbox-text-color-light","text":"Fallback Default --mbx-counterbox-text-color --mbx-text-color-light <p>Counter text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-text-color-dark","title":"--mbx-counterbox-text-color-dark","text":"Fallback Default --mbx-counterbox-text-color --mbx-text-color-dark <p>Counter text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-background-hover","title":"--mbx-counterbox-background-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-counterbox-background-hover-light</code> and <code>mbx-counterbox-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-background-hover-light","title":"--mbx-counterbox-background-hover-light","text":"Fallback Default --mbx-counterbox-background-hover --mbx-background-color-hover-light <p>Counter background when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-background-hover-dark","title":"--mbx-counterbox-background-hover-dark","text":"Fallback Default --mbx-counterbox-background-hover --mbx-background-color-hover-dark <p>Counter background when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-text-color-hover","title":"--mbx-counterbox-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-counterbox-text-color-hover-light</code> and <code>mbx-counterbox-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-text-color-hover-light","title":"--mbx-counterbox-text-color-hover-light","text":"Fallback Default --mbx-counterbox-text-color-hover --mbx-text-color-hover-light <p>Counter text color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Counter/css-vars/#-mbx-counterbox-text-color-hover-dark","title":"--mbx-counterbox-text-color-hover-dark","text":"Fallback Default --mbx-counterbox-text-color-hover --mbx-text-color-hover-dark <p>Counter text color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/atoms/Counter/props/","title":"Counter properties","text":""},{"location":"components/atoms/Counter/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Counter/props/#props-table","title":"Props table","text":"Parameter Type Default value number / placeholder string / readOnly boolean false min number / max number / onChange (newValue: number) =&gt; void () =&gt; {}"},{"location":"components/atoms/Counter/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Counter/props/#value","title":"value","text":"Type Default number / <p>numeric input value</p> <p></p> <p></p>"},{"location":"components/atoms/Counter/props/#placeholder","title":"placeholder","text":"Type Default string / <p>label showed when no value is set</p> <p></p> <p></p>"},{"location":"components/atoms/Counter/props/#readonly","title":"readOnly","text":"Type Default boolean false <p>if true, component value can only be set with <code>value</code> parameter</p> <p></p> <p></p>"},{"location":"components/atoms/Counter/props/#min","title":"min","text":"Type Default number / <p>min allowed value</p> <p></p> <p></p>"},{"location":"components/atoms/Counter/props/#max","title":"max","text":"Type Default number / <p>max allowed value</p> <p></p> <p></p>"},{"location":"components/atoms/Counter/props/#onchange","title":"onChange","text":"Type Default (newValue: number) =&gt; void () =&gt; {} <p>Callback triggered when Counter component input value is changed by the user</p> <p></p>"},{"location":"components/atoms/Divider/","title":"Divider page","text":"<p>A simple divider, useful to separate sections and paragraphs</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Divider/css-vars/","title":"Divider CSS variables","text":""},{"location":"components/atoms/Divider/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Divider/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-divider-color / / --mbx-divider-color-light --mbx-divider-color --mbx-text-color-light --mbx-divider-color-dark --mbx-divider-color --mbx-text-color-dark"},{"location":"components/atoms/Divider/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Divider/css-vars/#-mbx-divider-color","title":"--mbx-divider-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-divider-color-light</code> and <code>--mbx-divider-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Divider/css-vars/#-mbx-divider-color-light","title":"--mbx-divider-color-light","text":"Fallback Default --mbx-divider-color --mbx-text-color-light <p>Divider color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Divider/css-vars/#-mbx-divider-color-dark","title":"--mbx-divider-color-dark","text":"Fallback Default --mbx-divider-color --mbx-text-color-dark <p>Divider color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/atoms/Divider/props/","title":"Divider properties","text":""},{"location":"components/atoms/Divider/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Divider/props/#props-table","title":"Props table","text":"Parameter Type Default"},{"location":"components/atoms/Divider/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/EmbeddedVideo/","title":"EmbeddedVideo page","text":"<p>A wrapper to easily serve embedded videos from supported sources (<code>Youtube</code>, <code>Dailymotion</code> and <code>Facebook watch</code> for now) - https://www.youtube-nocookie.com/ is used for youtube videos to prevent cookies</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/EmbeddedVideo/css-vars/","title":"EmbeddedVideo CSS variables","text":""},{"location":"components/atoms/EmbeddedVideo/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/EmbeddedVideo/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default"},{"location":"components/atoms/EmbeddedVideo/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/EmbeddedVideo/props/","title":"EmbeddedVideo properties","text":""},{"location":"components/atoms/EmbeddedVideo/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/EmbeddedVideo/props/#props-table","title":"Props table","text":"Parameter Type Default url string /"},{"location":"components/atoms/EmbeddedVideo/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/EmbeddedVideo/props/#url","title":"url","text":"Type Default string / <p>External video url to embed</p> <p></p>"},{"location":"components/atoms/IconButton/","title":"IconButton page","text":"<p>An empty button, without additional styles, to make an icon clickable</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/IconButton/css-vars/","title":"IconButton CSS variables","text":""},{"location":"components/atoms/IconButton/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/IconButton/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default"},{"location":"components/atoms/IconButton/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/IconButton/props/","title":"IconButton properties","text":""},{"location":"components/atoms/IconButton/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/IconButton/props/#props-table","title":"Props table","text":"Parameter Type Default children JSX.Element | string / onMouseEnter () =&gt; void / onMouseLeave () =&gt; void / onClick () =&gt; void () =&gt; {}"},{"location":"components/atoms/IconButton/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/IconButton/props/#children","title":"children","text":"Type Default JSX.Element | string / <p>Button content - extended from Button component</p> <p></p> <p></p>"},{"location":"components/atoms/IconButton/props/#onmouseenter","title":"onMouseEnter","text":"Type Default () =&gt; void / <p>This callback is triggered everytime the cursor enter the button area - extended from Button component</p> <p></p> <p></p>"},{"location":"components/atoms/IconButton/props/#onmouseleave","title":"onMouseLeave","text":"Type Default () =&gt; void / <p>This callback is triggered everytime the cursor exit the button area - extended from Button component</p> <p></p> <p></p>"},{"location":"components/atoms/IconButton/props/#onclick","title":"onClick","text":"Type Default () =&gt; void () =&gt; {} <p>Callback triggered when Button component is clicked - extended from Button component</p> <p></p>"},{"location":"components/atoms/Image/","title":"Image page","text":"<p>An Image component, enhanced by MoBrix-ui system</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Image/css-vars/","title":"Image CSS variables","text":""},{"location":"components/atoms/Image/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Image/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default"},{"location":"components/atoms/Image/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Image/props/","title":"Image properties","text":""},{"location":"components/atoms/Image/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Image/props/#props-table","title":"Props table","text":"Parameter Type Default src string / width number / height number / alt string /"},{"location":"components/atoms/Image/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Image/props/#src","title":"src","text":"Type Default string / <p>Image src attribute</p> <p></p> <p></p>"},{"location":"components/atoms/Image/props/#width","title":"width","text":"Type Default number / <p>Image width attribute</p> <p></p> <p></p>"},{"location":"components/atoms/Image/props/#height","title":"height","text":"Type Default number / <p>Image height attribute</p> <p></p> <p></p>"},{"location":"components/atoms/Image/props/#alt","title":"alt","text":"Type Default string / <p>Image alt attribute</p> <p></p>"},{"location":"components/atoms/Input/","title":"Input page","text":"<p>A flexible text input element</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Input/css-vars/","title":"Input CSS variables","text":""},{"location":"components/atoms/Input/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Input/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-inputbox-background / / --mbx-inputbox-background-light --mbx-inputbox-background --mbx-background-color-light --mbx-inputbox-background-dark --mbx-inputbox-background --mbx-background-color-dark --mbx-inputbox-text-color / / --mbx-inputbox-text-color-light --mbx-inputbox-text-color --mbx-text-color-light --mbx-inputbox-text-color-dark --mbx-inputbox-text-color --mbx-text-color-dark --mbx-inputbox-background-hover / / --mbx-inputbox-background-hover-light --mbx-inputbox-background-hover --mbx-background-color-hover-light --mbx-inputbox-background-hover-dark --mbx-inputbox-background-hover --mbx-background-color-hover-dark --mbx-inputbox-text-color-hover / / --mbx-inputbox-text-color-hover-light --mbx-inputbox-text-color-hover --mbx-text-color-hover-light --mbx-inputbox-text-color-hover-dark --mbx-inputbox-text-color-hover --mbx-text-color-hover-dark"},{"location":"components/atoms/Input/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-background","title":"--mbx-inputbox-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-inputbox-background-light</code> and <code>mbx-inputbox-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-background-light","title":"--mbx-inputbox-background-light","text":"Fallback Default --mbx-inputbox-background --mbx-background-color-light <p>Input background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-background-dark","title":"--mbx-inputbox-background-dark","text":"Fallback Default --mbx-inputbox-background --mbx-background-color-dark <p>Input background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-text-color","title":"--mbx-inputbox-text-color","text":"Fallback Default / / <p>Fallback value for <code>mbx-inputbox-text-color-light</code> and <code>mbx-inputbox-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-text-color-light","title":"--mbx-inputbox-text-color-light","text":"Fallback Default --mbx-inputbox-text-color --mbx-text-color-light <p>Input text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-text-color-dark","title":"--mbx-inputbox-text-color-dark","text":"Fallback Default --mbx-inputbox-text-color --mbx-text-color-dark <p>Input text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-background-hover","title":"--mbx-inputbox-background-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-inputbox-background-hover-light</code> and <code>mbx-inputbox-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-background-hover-light","title":"--mbx-inputbox-background-hover-light","text":"Fallback Default --mbx-inputbox-background-hover --mbx-background-color-hover-light <p>Input background when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-background-hover-dark","title":"--mbx-inputbox-background-hover-dark","text":"Fallback Default --mbx-inputbox-background-hover --mbx-background-color-hover-dark <p>Input background when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-text-color-hover","title":"--mbx-inputbox-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-inputbox-text-color-hover-light</code> and <code>mbx-inputbox-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-text-color-hover-light","title":"--mbx-inputbox-text-color-hover-light","text":"Fallback Default --mbx-inputbox-text-color-hover --mbx-text-color-hover-light <p>Input text color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Input/css-vars/#-mbx-inputbox-text-color-hover-dark","title":"--mbx-inputbox-text-color-hover-dark","text":"Fallback Default --mbx-inputbox-text-color-hover --mbx-text-color-hover-dark <p>Input text color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/atoms/Input/props/","title":"Input properties","text":""},{"location":"components/atoms/Input/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Input/props/#props-table","title":"Props table","text":"Parameter Type Default value string / placeholder string / readOnly boolean false onChange (newValue: string) =&gt; void () =&gt; {}"},{"location":"components/atoms/Input/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Input/props/#value","title":"value","text":"Type Default string / <p>text input value</p> <p></p> <p></p>"},{"location":"components/atoms/Input/props/#placeholder","title":"placeholder","text":"Type Default string / <p>label showed when no value is set</p> <p></p> <p></p>"},{"location":"components/atoms/Input/props/#readonly","title":"readOnly","text":"Type Default boolean false <p>if true, component value can only be set with <code>value</code> parameter</p> <p></p> <p></p>"},{"location":"components/atoms/Input/props/#onchange","title":"onChange","text":"Type Default (newValue: string) =&gt; void () =&gt; {} <p>Callback triggered when Input component input value is changed by the user</p> <p></p>"},{"location":"components/atoms/Label/","title":"Label page","text":"<p>A text wrapper, with many options to customize its content</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Label/css-vars/","title":"Label CSS variables","text":""},{"location":"components/atoms/Label/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Label/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-label-text-color / / --mbx-label-text-color-light --mbx-label-text-color --mbx-text-color-light --mbx-label-text-color-dark --mbx-label-text-color --mbx-text-color-dark"},{"location":"components/atoms/Label/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Label/css-vars/#-mbx-label-text-color","title":"--mbx-label-text-color","text":"Fallback Default / / <p>Fallback value for <code>mbx-label-text-color-light</code> and <code>mbx-label-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Label/css-vars/#-mbx-label-text-color-light","title":"--mbx-label-text-color-light","text":"Fallback Default --mbx-label-text-color --mbx-text-color-light <p>Label text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Label/css-vars/#-mbx-label-text-color-dark","title":"--mbx-label-text-color-dark","text":"Fallback Default --mbx-label-text-color --mbx-text-color-dark <p>Label text color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/atoms/Label/props/","title":"Label properties","text":""},{"location":"components/atoms/Label/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Label/props/#props-table","title":"Props table","text":"Parameter Type Default children string | string[] /"},{"location":"components/atoms/Label/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Label/props/#children","title":"children","text":"Type Default string | string[] / <p>text content to show (string arrays are accepted)</p> <p></p>"},{"location":"components/atoms/Link/","title":"Link page","text":"<p>A re-defined <code>&lt;a&gt;</code> component, designed to be better used with links</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Link/css-vars/","title":"Link CSS variables","text":""},{"location":"components/atoms/Link/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Link/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-link-color / / --mbx-link-color-light --mbx-link-color --mbx-text-color-light --mbx-link-color-dark --mbx-link-color --mbx-text-color-dark --mbx-link-color-hover / / --mbx-link-color-hover-light --mbx-link-color-hover --mbx-link-color-light --mbx-link-color-hover-dark --mbx-link-color-hover --mbx-link-color-dark"},{"location":"components/atoms/Link/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Link/css-vars/#-mbx-link-color","title":"--mbx-link-color","text":"Fallback Default / / <p>Fallback value for <code>mbx-link-color-light</code> and <code>mbx-link-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Link/css-vars/#-mbx-link-color-light","title":"--mbx-link-color-light","text":"Fallback Default --mbx-link-color --mbx-text-color-light <p>Link text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Link/css-vars/#-mbx-link-color-dark","title":"--mbx-link-color-dark","text":"Fallback Default --mbx-link-color --mbx-text-color-dark <p>Link text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Link/css-vars/#-mbx-link-color-hover","title":"--mbx-link-color-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-link-color-hover-light</code> and <code>mbx-link-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Link/css-vars/#-mbx-link-color-hover-light","title":"--mbx-link-color-hover-light","text":"Fallback Default --mbx-link-color-hover --mbx-link-color-light <p>Link text color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Link/css-vars/#-mbx-link-color-hover-dark","title":"--mbx-link-color-hover-dark","text":"Fallback Default --mbx-link-color-hover --mbx-link-color-dark <p>Link text color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/atoms/Link/props/","title":"Link properties","text":""},{"location":"components/atoms/Link/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Link/props/#props-table","title":"Props table","text":"Parameter Type Default to string / newTab string false children <code>JSX.Element</code> | <code>string</code> /"},{"location":"components/atoms/Link/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Link/props/#to","title":"to","text":"Type Default string / <p>Link url</p> <p></p> <p></p>"},{"location":"components/atoms/Link/props/#newtab","title":"newTab","text":"Type Default string false <p>f true, the link will be opened in a new tab</p> <p></p> <p></p>"},{"location":"components/atoms/Link/props/#children","title":"children","text":"Type Default <code>JSX.Element</code> | <code>string</code> / <p>Link content</p> <p></p>"},{"location":"components/atoms/RadioButton/","title":"RadioButton page","text":"<p>A single radio button component. Optionally, can prevent user to deselect it</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/RadioButton/css-vars/","title":"RadioButton CSS variables","text":""},{"location":"components/atoms/RadioButton/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/RadioButton/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-radio-background / / --mbx-radio-background-light --mbx-radio-background radial-gradient(#f1f1f1 20%, #e4e4e4 30%, #bebebe 55%, #f0f0f0 20%) --mbx-radio-background-dark --mbx-radio-background radial-gradient(closest-side, #2d3748 20%, #232b38 30%, #1d1f44 55%, #191f29 20%) --mbx-radio-background-hover / / --mbx-radio-background-hover-light --mbx-radio-background-hover --mbx-radio-background-light --mbx-radio-background-hover-dark --mbx-radio-background-hover --mbx-radio-background-dark --mbx-radio-icon-background / / --mbx-radio-icon-background-light --mbx-radio-icon-background radial-gradient(circle at 23px 23px, #2d3748, #191f29) --mbx-radio-icon-background-dark --mbx-radio-icon-background radial-gradient(circle at 23px 23px, #dbe0e6, #949494)"},{"location":"components/atoms/RadioButton/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/RadioButton/css-vars/#-mbx-radio-background","title":"--mbx-radio-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-radio-background-light</code> and <code>mbx-radio-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/css-vars/#-mbx-radio-background-light","title":"--mbx-radio-background-light","text":"Fallback Default --mbx-radio-background radial-gradient(#f1f1f1 20%, #e4e4e4 30%, #bebebe 55%, #f0f0f0 20%) <p>RadioButton background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/css-vars/#-mbx-radio-background-dark","title":"--mbx-radio-background-dark","text":"Fallback Default --mbx-radio-background radial-gradient(closest-side, #2d3748 20%, #232b38 30%, #1d1f44 55%, #191f29 20%) <p>RadioButton background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/css-vars/#-mbx-radio-background-hover","title":"--mbx-radio-background-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-radio-background-hover-light</code> and <code>mbx-radio-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/css-vars/#-mbx-radio-background-hover-light","title":"--mbx-radio-background-hover-light","text":"Fallback Default --mbx-radio-background-hover --mbx-radio-background-light <p>RadioButton background when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/css-vars/#-mbx-radio-background-hover-dark","title":"--mbx-radio-background-hover-dark","text":"Fallback Default --mbx-radio-background-hover --mbx-radio-background-dark <p>RadioButton background when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/css-vars/#-mbx-radio-icon-background","title":"--mbx-radio-icon-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-radio-icon-background-light</code> and <code>mbx-radio-icon-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/css-vars/#-mbx-radio-icon-background-light","title":"--mbx-radio-icon-background-light","text":"Fallback Default --mbx-radio-icon-background radial-gradient(circle at 23px 23px, #2d3748, #191f29) <p>RadioButton icon background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/css-vars/#-mbx-radio-icon-background-dark","title":"--mbx-radio-icon-background-dark","text":"Fallback Default --mbx-radio-icon-background radial-gradient(circle at 23px 23px, #dbe0e6, #949494) <p>RadioButton icon background when dark mode is <code>on</code></p> <p></p>"},{"location":"components/atoms/RadioButton/props/","title":"RadioButton properties","text":""},{"location":"components/atoms/RadioButton/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/RadioButton/props/#props-table","title":"Props table","text":"Parameter Type Default value boolean false deselectable boolean false onChange (newValue: boolean) =&gt; void () =&gt; {}"},{"location":"components/atoms/RadioButton/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/RadioButton/props/#value","title":"value","text":"Type Default boolean false <p>actual radio button value (radio icon visiblity)</p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/props/#deselectable","title":"deselectable","text":"Type Default boolean false <p>if <code>false</code>, the button can be selected only once (the value can't change then)</p> <p></p> <p></p>"},{"location":"components/atoms/RadioButton/props/#onchange","title":"onChange","text":"Type Default (newValue: boolean) =&gt; void () =&gt; {} <p>Callback triggered when RadioButton component input value is changed by the user</p> <p></p>"},{"location":"components/atoms/Rater/","title":"Rater page","text":"<p>A modern rater component, to let the user leave a review within your app</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Rater/css-vars/","title":"Rater CSS variables","text":""},{"location":"components/atoms/Rater/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Rater/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-rater-background / / --mbx-rater-background-light --mbx-rater-background --mbx-background-light --mbx-rater-background-dark --mbx-rater-background --mbx-background-dark"},{"location":"components/atoms/Rater/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Rater/css-vars/#-mbx-rater-background","title":"--mbx-rater-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-rater-background-light</code> and <code>mbx-rater-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Rater/css-vars/#-mbx-rater-background-light","title":"--mbx-rater-background-light","text":"Fallback Default --mbx-rater-background --mbx-background-light <p>Rater background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Rater/css-vars/#-mbx-rater-background-dark","title":"--mbx-rater-background-dark","text":"Fallback Default --mbx-rater-background --mbx-background-dark <p>Rater background when dark mode is <code>on</code></p> <p></p>"},{"location":"components/atoms/Rater/props/","title":"Rater properties","text":""},{"location":"components/atoms/Rater/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Rater/props/#props-table","title":"Props table","text":"Parameter Type Default value number 0 max number 5 readOnly boolean false type <code>star</code>|<code>circle</code> 'star' vertical boolean false onChange (newValue: number) =&gt; void () =&gt; {}"},{"location":"components/atoms/Rater/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Rater/props/#value","title":"value","text":"Type Default number 0 <p>actual vote</p> <p></p> <p></p>"},{"location":"components/atoms/Rater/props/#max","title":"max","text":"Type Default number 5 <p>max vote (max number of icons displayed)</p> <p></p> <p></p>"},{"location":"components/atoms/Rater/props/#readonly","title":"readOnly","text":"Type Default boolean false <p>if <code>true</code>, the rate can't be changed by clicking on the icons</p> <p></p> <p></p>"},{"location":"components/atoms/Rater/props/#type","title":"type","text":"Type Default <code>star</code>|<code>circle</code> 'star' <p>vote icons type</p> <p></p> <p></p>"},{"location":"components/atoms/Rater/props/#vertical","title":"vertical","text":"Type Default boolean false <p>if <code>true</code>, rate icons will be showed vertically</p> <p></p> <p></p>"},{"location":"components/atoms/Rater/props/#onchange","title":"onChange","text":"Type Default (newValue: number) =&gt; void () =&gt; {} <p>callback triggered when user select a vote</p> <p></p>"},{"location":"components/atoms/Selector/","title":"Selector page","text":"<p>A re-defined <code>select</code> component</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Selector/css-vars/","title":"Selector CSS variables","text":""},{"location":"components/atoms/Selector/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Selector/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-selector-background / / --mbx-selector-background-light --mbx-selector-background --mbx-background-light --mbx-selector-background-dark --mbx-selector-background --mbx-background-dark)) --mbx-selector-text-color / / --mbx-selector-text-color-light --mbx-selector-text-color --mbx-text-color-light --mbx-selector-text-color-dark --mbx-selector-text-color [--mbx-text-color-dark --mbx-selector-background-hover / / --mbx-selector-background-hover-light --mbx-selector-background-hover --mbx-selector-background-light --mbx-selector-background-hover-dark --mbx-selector-background-hover --mbx-selector-background-dark --mbx-selector-text-color-hover / / --mbx-selector-text-color-hover-light --mbx-selector-text-color-hover --mbx-text-color-hover-light --mbx-selector-text-color-hover-dark --mbx-selector-text-color-hover --mbx-text-color-hover-dark"},{"location":"components/atoms/Selector/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-background","title":"--mbx-selector-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-selector-background-light</code> and <code>mbx-selector-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-background-light","title":"--mbx-selector-background-light","text":"Fallback Default --mbx-selector-background --mbx-background-light <p>Selector background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-background-dark","title":"--mbx-selector-background-dark","text":"Fallback Default --mbx-selector-background --mbx-background-dark)) <p>Selector background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-text-color","title":"--mbx-selector-text-color","text":"Fallback Default / / <p>Fallback value for <code>mbx-selector-text-color-light</code> and <code>mbx-selector-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-text-color-light","title":"--mbx-selector-text-color-light","text":"Fallback Default --mbx-selector-text-color --mbx-text-color-light <p>Selector text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-text-color-dark","title":"--mbx-selector-text-color-dark","text":"Fallback Default --mbx-selector-text-color [--mbx-text-color-dark <p>Selector text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-background-hover","title":"--mbx-selector-background-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-selector-background-hover-light</code> and <code>mbx-selector-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-background-hover-light","title":"--mbx-selector-background-hover-light","text":"Fallback Default --mbx-selector-background-hover --mbx-selector-background-light <p>Selector background when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-background-hover-dark","title":"--mbx-selector-background-hover-dark","text":"Fallback Default --mbx-selector-background-hover --mbx-selector-background-dark <p>Selector background when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-text-color-hover","title":"--mbx-selector-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-selector-text-color-hover-light</code> and <code>mbx-selector-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-text-color-hover-light","title":"--mbx-selector-text-color-hover-light","text":"Fallback Default --mbx-selector-text-color-hover --mbx-text-color-hover-light <p>Selector text color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Selector/css-vars/#-mbx-selector-text-color-hover-dark","title":"--mbx-selector-text-color-hover-dark","text":"Fallback Default --mbx-selector-text-color-hover --mbx-text-color-hover-dark <p>Selector text color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/atoms/Selector/props/","title":"Selector properties","text":""},{"location":"components/atoms/Selector/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Selector/props/#props-table","title":"Props table","text":"Parameter Type Default value number 0 elements string[] [] optionClassName string / onChange (newValue: number) =&gt; void () =&gt; {}"},{"location":"components/atoms/Selector/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Selector/props/#value","title":"value","text":"Type Default number 0 <p>option index actually displayed</p> <p></p> <p></p>"},{"location":"components/atoms/Selector/props/#elements","title":"elements","text":"Type Default string[] [] <p>selector options array, every element must be a string</p> <p></p> <p></p>"},{"location":"components/atoms/Selector/props/#optionclassname","title":"optionClassName","text":"Type Default string / <p>className applied on every options inside the selector</p> <p></p> <p></p>"},{"location":"components/atoms/Selector/props/#onchange","title":"onChange","text":"Type Default (newValue: number) =&gt; void () =&gt; {} <p>Callback triggered when Selector component input value is changed by the user</p> <p></p>"},{"location":"components/atoms/Slider/","title":"Slider page","text":"<p>A modern <code>range</code> input component, to control a value using a simple slider</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Slider/css-vars/","title":"Slider CSS variables","text":""},{"location":"components/atoms/Slider/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Slider/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-slider-background / / --mbx-slider-background-light --mbx-slider-background --mbx-background-light --mbx-slider-background-dark --mbx-slider-background --mbx-background-dark --mbx-slider-thumb-color / / --mbx-slider-thumb-color-light --mbx-slider-thumb-color radial-gradient(#2d3748, #1d232e) --mbx-slider-thumb-color-dark --mbx-slider-thumb-color radial-gradient(#e3e4e9, #9b9999) --mbx-slider-thumb-color-hover / / --mbx-slider-thumb-color-hover-light --mbx-slider-thumb-color-hover --mbx-slider-thumb-color-light --mbx-slider-thumb-color-hover-dark --mbx-slider-thumb-color-hover --mbx-slider-thumb-color-dark"},{"location":"components/atoms/Slider/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Slider/css-vars/#-mbx-slider-background","title":"--mbx-slider-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-slider-background-light</code> and <code>mbx-slider-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Slider/css-vars/#-mbx-slider-background-light","title":"--mbx-slider-background-light","text":"Fallback Default --mbx-slider-background --mbx-background-light <p>Slider background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Slider/css-vars/#-mbx-slider-background-dark","title":"--mbx-slider-background-dark","text":"Fallback Default --mbx-slider-background --mbx-background-dark <p>Slider background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Slider/css-vars/#-mbx-slider-thumb-color","title":"--mbx-slider-thumb-color","text":"Fallback Default / / <p>Fallback value for <code>mbx-slider-thumb-color-light</code> and <code>mbx-slider-thumb-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Slider/css-vars/#-mbx-slider-thumb-color-light","title":"--mbx-slider-thumb-color-light","text":"Fallback Default --mbx-slider-thumb-color radial-gradient(#2d3748, #1d232e) <p>Slider thumb color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Slider/css-vars/#-mbx-slider-thumb-color-dark","title":"--mbx-slider-thumb-color-dark","text":"Fallback Default --mbx-slider-thumb-color radial-gradient(#e3e4e9, #9b9999) <p>Slider thumb color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Slider/css-vars/#-mbx-slider-thumb-color-hover","title":"--mbx-slider-thumb-color-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-slider-thumb-color-hover-light</code> and <code>mbx-slider-thumb-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Slider/css-vars/#-mbx-slider-thumb-color-hover-light","title":"--mbx-slider-thumb-color-hover-light","text":"Fallback Default --mbx-slider-thumb-color-hover --mbx-slider-thumb-color-light <p>Slider thumb color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/atoms/Slider/css-vars/#-mbx-slider-thumb-color-hover-dark","title":"--mbx-slider-thumb-color-hover-dark","text":"Fallback Default --mbx-slider-thumb-color-hover --mbx-slider-thumb-color-dark <p>Slider thumb color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/atoms/Slider/props/","title":"Slider properties","text":""},{"location":"components/atoms/Slider/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Slider/props/#props-table","title":"Props table","text":"Parameter Type Default value number / min number / max number / readOnly boolean / onChange (newValue: number) =&gt; void () =&gt; {}"},{"location":"components/atoms/Slider/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Slider/props/#value","title":"value","text":"Type Default number / <p>Actual slider value</p> <p></p> <p></p>"},{"location":"components/atoms/Slider/props/#min","title":"min","text":"Type Default number / <p>Min allowed value</p> <p></p> <p></p>"},{"location":"components/atoms/Slider/props/#max","title":"max","text":"Type Default number / <p>Max allowed value</p> <p></p> <p></p>"},{"location":"components/atoms/Slider/props/#readonly","title":"readOnly","text":"Type Default boolean / <p>if <code>true</code>, component value can only be set with <code>value</code> parameter</p> <p></p> <p></p>"},{"location":"components/atoms/Slider/props/#onchange","title":"onChange","text":"Type Default (newValue: number) =&gt; void () =&gt; {} <p>Callback triggered when Slider component input value is changed by the user</p> <p></p>"},{"location":"components/atoms/Spinner/","title":"Spinner page","text":"<p>A smart status indicator, optionally with custom images showed for every state (defaults are <code>loading</code>,<code>success</code> and <code>error</code>)</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Spinner/css-vars/","title":"Spinner CSS variables","text":""},{"location":"components/atoms/Spinner/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Spinner/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-spinner-success-color / / --mbx-spinner-success-color-light --mbx-spinner-success-color #05bc29 --mbx-spinner-success-color-dark --mbx-spinner-success-color #05bc29 --mbx-spinner-error-color / / --mbx-spinner-error-color-light --mbx-spinner-error-color #ff0000 --mbx-spinner-error-color-dark --mbx-spinner-error-color #ff0000 --mbx-spinner-loading-color / / --mbx-spinner-loading-color-light --mbx-spinner-loading-color #202020 --mbx-spinner-loading-color-dark --mbx-spinner-loading-color #202020"},{"location":"components/atoms/Spinner/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Spinner/css-vars/#-mbx-spinner-success-color","title":"--mbx-spinner-success-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-spinner-success-color-light</code> and <code>--mbx-spinner-success-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Spinner/css-vars/#-mbx-spinner-success-color-light","title":"--mbx-spinner-success-color-light","text":"Fallback Default --mbx-spinner-success-color #05bc29 <p>Spinner success color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Spinner/css-vars/#-mbx-spinner-success-color-dark","title":"--mbx-spinner-success-color-dark","text":"Fallback Default --mbx-spinner-success-color #05bc29 <p>Spinner success color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Spinner/css-vars/#-mbx-spinner-error-color","title":"--mbx-spinner-error-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-spinner-error-color-light</code> and <code>--mbx-spinner-error-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Spinner/css-vars/#-mbx-spinner-error-color-light","title":"--mbx-spinner-error-color-light","text":"Fallback Default --mbx-spinner-error-color #ff0000 <p>Spinner error color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Spinner/css-vars/#-mbx-spinner-error-color-dark","title":"--mbx-spinner-error-color-dark","text":"Fallback Default --mbx-spinner-error-color #ff0000 <p>Spinner error color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Spinner/css-vars/#-mbx-spinner-loading-color","title":"--mbx-spinner-loading-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-spinner-loading-color-light</code> and <code>--mbx-spinner-loading-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Spinner/css-vars/#-mbx-spinner-loading-color-light","title":"--mbx-spinner-loading-color-light","text":"Fallback Default --mbx-spinner-loading-color #202020 <p>Spinner loading color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Spinner/css-vars/#-mbx-spinner-loading-color-dark","title":"--mbx-spinner-loading-color-dark","text":"Fallback Default --mbx-spinner-loading-color #202020 <p>Spinner loading color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/atoms/Spinner/props/","title":"Spinner properties","text":""},{"location":"components/atoms/Spinner/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Spinner/props/#props-table","title":"Props table","text":"Parameter Type Default value number 'loading' statuses Record /"},{"location":"components/atoms/Spinner/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Spinner/props/#value","title":"value","text":"Type Default number 'loading' <p>Spinner status</p> <p></p> <p></p>"},{"location":"components/atoms/Spinner/props/#statuses","title":"statuses","text":"Type Default Record / <p>Custom statuses, to map every icon with a specific status</p> <p></p>"},{"location":"components/atoms/Toggle/","title":"Toggle page","text":"<p>A compact Toggle switcher, customized to reflect its actual status</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/atoms/Toggle/css-vars/","title":"Toggle CSS variables","text":""},{"location":"components/atoms/Toggle/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/atoms/Toggle/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-toggle-background / / --mbx-toggle-background-light --mbx-toggle-background --mbx-background-light --mbx-toggle-background-dark --mbx-toggle-background --mbx-background-dark --mbx-toggle-icon-on-internal-color / / --mbx-toggle-icon-on-internal-color-light --mbx-toggle-icon-on-internal-color #ffffff --mbx-toggle-icon-on-internal-color-dark --mbx-toggle-icon-on-internal-color #ffffff --mbx-toggle-icon-on-external-color / / --mbx-toggle-icon-on-external-color-light --mbx-toggle-icon-on-external-color #adadad --mbx-toggle-icon-on-external-color-dark --mbx-toggle-icon-on-external-color #adadad --mbx-toggle-icon-off-internal-color / / --mbx-toggle-icon-off-internal-color-light --mbx-toggle-icon-off-internal-color #a5a5a5 --mbx-toggle-icon-off-internal-color-dark --mbx-toggle-icon-off-internal-color #a5a5a5 --mbx-toggle-icon-off-external-color / / --mbx-toggle-icon-off-external-color-light --mbx-toggle-icon-off-external-color #a7a3a3 --mbx-toggle-icon-off-external-color-dark --mbx-toggle-icon-off-external-color #a7a3a3"},{"location":"components/atoms/Toggle/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-background","title":"--mbx-toggle-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-toggle-background-light</code> and <code>--mbx-toggle-background-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-background-light","title":"--mbx-toggle-background-light","text":"Fallback Default --mbx-toggle-background --mbx-background-light <p>Toggle background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-background-dark","title":"--mbx-toggle-background-dark","text":"Fallback Default --mbx-toggle-background --mbx-background-dark <p>Toggle background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-on-internal-color","title":"--mbx-toggle-icon-on-internal-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-toggle-icon-on-internal-color-light</code> and <code>--mbx-toggle-icon-on-internal-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-on-internal-color-light","title":"--mbx-toggle-icon-on-internal-color-light","text":"Fallback Default --mbx-toggle-icon-on-internal-color #ffffff <p>Toggle icon internal color, when dark mode is <code>off</code> and toggle status is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-on-internal-color-dark","title":"--mbx-toggle-icon-on-internal-color-dark","text":"Fallback Default --mbx-toggle-icon-on-internal-color #ffffff <p>Toggle icon internal color, when dark mode is <code>off</code> and toggle status is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-on-external-color","title":"--mbx-toggle-icon-on-external-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-toggle-icon-on-external-color-light</code> and <code>--mbx-toggle-icon-on-external-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-on-external-color-light","title":"--mbx-toggle-icon-on-external-color-light","text":"Fallback Default --mbx-toggle-icon-on-external-color #adadad <p>Toggle icon external color, when dark mode is <code>off</code> and toggle status is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-on-external-color-dark","title":"--mbx-toggle-icon-on-external-color-dark","text":"Fallback Default --mbx-toggle-icon-on-external-color #adadad <p>Toggle icon external color, when dark mode is <code>on</code> and toggle status is <code>on</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-off-internal-color","title":"--mbx-toggle-icon-off-internal-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-toggle-icon-off-internal-color-light</code> and <code>--mbx-toggle-icon-off-internal-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-off-internal-color-light","title":"--mbx-toggle-icon-off-internal-color-light","text":"Fallback Default --mbx-toggle-icon-off-internal-color #a5a5a5 <p>Toggle icon internal color, when dark mode is <code>off</code> and toggle status is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-off-internal-color-dark","title":"--mbx-toggle-icon-off-internal-color-dark","text":"Fallback Default --mbx-toggle-icon-off-internal-color #a5a5a5 <p>Toggle icon internal color, when dark mode is <code>on</code> and toggle status is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-off-external-color","title":"--mbx-toggle-icon-off-external-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-toggle-icon-off-external-color-light</code> and <code>--mbx-toggle-icon-off-external-color-dark</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-off-external-color-light","title":"--mbx-toggle-icon-off-external-color-light","text":"Fallback Default --mbx-toggle-icon-off-external-color #a7a3a3 <p>Toggle icon external color, when dark mode is <code>off</code> and toggle status is <code>off</code></p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/css-vars/#-mbx-toggle-icon-off-external-color-dark","title":"--mbx-toggle-icon-off-external-color-dark","text":"Fallback Default --mbx-toggle-icon-off-external-color #a7a3a3 <p>Toggle icon external color, when dark mode is <code>on</code> and toggle status is <code>off</code></p> <p></p>"},{"location":"components/atoms/Toggle/props/","title":"Toggle properties","text":""},{"location":"components/atoms/Toggle/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/atoms/Toggle/props/#props-table","title":"Props table","text":"Parameter Type Default value boolean / onIcon JSX.Element / icon JSX.Element / offIcon JSX.Element / onChange (newValue: boolean) =&gt; void () =&gt; {}"},{"location":"components/atoms/Toggle/props/#props-list","title":"Props list","text":""},{"location":"components/atoms/Toggle/props/#value","title":"value","text":"Type Default boolean / <p>toggle status (true - on/false - off)</p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/props/#onicon","title":"onIcon","text":"Type Default JSX.Element / <p>custom toggle <code>on</code> icon (<code>value</code> === <code>true</code>)</p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/props/#icon","title":"icon","text":"Type Default JSX.Element / <p>custom toggle icon, used as a default icon</p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/props/#officon","title":"offIcon","text":"Type Default JSX.Element / <p>custom toggle <code>off</code> icon (<code>value</code> === <code>false</code>)</p> <p></p> <p></p>"},{"location":"components/atoms/Toggle/props/#onchange","title":"onChange","text":"Type Default (newValue: boolean) =&gt; void () =&gt; {} <p>Callback triggered when Toggle component input value is changed by the user</p> <p></p>"},{"location":"components/molecules/","title":"MoBrix-ui molecules","text":""},{"location":"components/molecules/#summary","title":"Summary","text":"<ul> <li>Card</li> <li>Carousel</li> <li>Container</li> <li>DismissableCard</li> <li>Dropdown</li> <li>ExpandableContainer</li> <li>FormField</li> <li>List</li> <li>Modal</li> <li>Popup</li> <li>RadioButtonGroup</li> <li>Review</li> <li>Table</li> <li>TabViewer</li> </ul>"},{"location":"components/molecules/Card/","title":"Card page","text":"<p>A Card component. Its UI depends on given parameters (header, body and footer)</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/Card/css-vars/","title":"Card CSS variables","text":""},{"location":"components/molecules/Card/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/Card/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-card-background / / --mbx-card-background-light --mbx-card-background linear-gradient(to right, #fff, #ededee, #e6e7e7) --mbx-card-background-dark --mbx-card-background linear-gradient(to right, #2d3748, #1d232e) --mbx-card-text-color / / --mbx-card-text-color-light --mbx-card-text-color --mbx-text-color-light --mbx-card-text-color-dark --mbx-card-text-color --mbx-text-color-dark"},{"location":"components/molecules/Card/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/Card/css-vars/#-mbx-card-background","title":"--mbx-card-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-card-background-light</code> and <code>--mbx-card-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Card/css-vars/#-mbx-card-background-light","title":"--mbx-card-background-light","text":"Fallback Default --mbx-card-background linear-gradient(to right, #fff, #ededee, #e6e7e7) <p>Card background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Card/css-vars/#-mbx-card-background-dark","title":"--mbx-card-background-dark","text":"Fallback Default --mbx-card-background linear-gradient(to right, #2d3748, #1d232e) <p>Card background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Card/css-vars/#-mbx-card-text-color","title":"--mbx-card-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-card-text-color-light</code> and <code>--mbx-card-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Card/css-vars/#-mbx-card-text-color-light","title":"--mbx-card-text-color-light","text":"Fallback Default --mbx-card-text-color --mbx-text-color-light <p>Card text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Card/css-vars/#-mbx-card-text-color-dark","title":"--mbx-card-text-color-dark","text":"Fallback Default --mbx-card-text-color --mbx-text-color-dark <p>Card text color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/molecules/Card/props/","title":"Card properties","text":""},{"location":"components/molecules/Card/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/Card/props/#props-table","title":"Props table","text":"Parameter Type Default header JSX.Element | string / body JSX.Element | string / footer JSX.Element | string / headerClassName string / bodyClassName string / footerClassName string / headerProps Record / bodyProps Record / footerProps Record / noDivider boolean / noTopDivider boolean / noBottomDivider boolean / children <code>JSX.Element</code> | <code>string</code> /"},{"location":"components/molecules/Card/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/Card/props/#header","title":"header","text":"Type Default JSX.Element | string / <p>Card header content</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#body","title":"body","text":"Type Default JSX.Element | string / <p>Card body content</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#footer","title":"footer","text":"Type Default JSX.Element | string / <p>Card footer content</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#headerclassname","title":"headerClassName","text":"Type Default string / <p>Custom classname applied on the Card header</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#bodyclassname","title":"bodyClassName","text":"Type Default string / <p>Custom classname applied on the Card body</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#footerclassname","title":"footerClassName","text":"Type Default string / <p>Custom classname applied on the Card footer</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#headerprops","title":"headerProps","text":"Type Default Record / <p>Custom props applied on the Card header</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#bodyprops","title":"bodyProps","text":"Type Default Record / <p>Custom props applied on the Card body</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#footerprops","title":"footerProps","text":"Type Default Record / <p>Custom props applied on the Card footer</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#nodivider","title":"noDivider","text":"Type Default boolean / <p>If <code>true</code>, hide all dividers</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#notopdivider","title":"noTopDivider","text":"Type Default boolean / <p>If <code>true</code>, hide the top divider, between header and body</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#nobottomdivider","title":"noBottomDivider","text":"Type Default boolean / <p>If <code>true</code>, hide the top divider, between body and footer</p> <p></p> <p></p>"},{"location":"components/molecules/Card/props/#children","title":"children","text":"Type Default <code>JSX.Element</code> | <code>string</code> / <p>Card content</p> <p></p>"},{"location":"components/molecules/Carousel/","title":"Carousel page","text":"<p>A compact carousel, to show any component (or image) into a slide, with dots and arrow button to go next/previous</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/Carousel/css-vars/","title":"Carousel CSS variables","text":""},{"location":"components/molecules/Carousel/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/Carousel/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-carousel-background / / --mbx-carousel-background-light --mbx-carousel-background --mbx-background-light --mbx-carousel-background-dark --mbx-carousel-background --mbx-background-dark --mbx-carousel-arrow-color / / --mbx-carousel-arrow-color-light --mbx-carousel-arrow-color #252525 --mbx-carousel-arrow-color-dark --mbx-carousel-arrow-color #e2e2e2 --mbx-carousel-arrow-color-hover / / --mbx-carousel-arrow-color-hover-light --mbx-carousel-arrow-color-hover #287dfd --mbx-carousel-arrow-color-hover-dark --mbx-carousel-arrow-color-hover #ff8007 --mbx-carousel-dot-empty-background / / --mbx-carousel-dot-empty-background-light --mbx-carousel-dot-empty-background radial-gradient(#000000, #181818, #282828, #3a3a3a, #4c4c4c, #6b6a6a, #858383) --mbx-carousel-dot-empty-background-dark --mbx-carousel-dot-empty-background radial-gradient(#000000, #181818, #282828, #3a3a3a, #4c4c4c, #6b6a6a, #858383) --mbx-carousel-dot-full-background / / --mbx-carousel-dot-full-background-light --mbx-carousel-dot-full-background linear-gradient(to top, #ff8007, #fd8616, #fd9b3f, #fd9c40, #fcbb7f, #fad6b4) --mbx-carousel-dot-full-background-dark --mbx-carousel-dot-full-background linear-gradient(to top, #ff8007, #fd8616, #fd9b3f, #fd9c40, #fcbb7f, #fad6b4)"},{"location":"components/molecules/Carousel/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-background","title":"--mbx-carousel-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-carousel-background-light</code> and <code>--mbx-carousel-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-background-light","title":"--mbx-carousel-background-light","text":"Fallback Default --mbx-carousel-background --mbx-background-light <p>Carousel background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-background-dark","title":"--mbx-carousel-background-dark","text":"Fallback Default --mbx-carousel-background --mbx-background-dark <p>Carousel background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-arrow-color","title":"--mbx-carousel-arrow-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-carousel-arrow-color-light</code> and <code>--mbx-carousel-arrow-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-arrow-color-light","title":"--mbx-carousel-arrow-color-light","text":"Fallback Default --mbx-carousel-arrow-color #252525 <p>Carousel arrow color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-arrow-color-dark","title":"--mbx-carousel-arrow-color-dark","text":"Fallback Default --mbx-carousel-arrow-color #e2e2e2 <p>Carousel arrow color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-arrow-color-hover","title":"--mbx-carousel-arrow-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-carousel-arrow-color-hover-light</code> and <code>--mbx-carousel-arrow-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-arrow-color-hover-light","title":"--mbx-carousel-arrow-color-hover-light","text":"Fallback Default --mbx-carousel-arrow-color-hover #287dfd <p>Carousel arrow color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-arrow-color-hover-dark","title":"--mbx-carousel-arrow-color-hover-dark","text":"Fallback Default --mbx-carousel-arrow-color-hover #ff8007 <p>Carousel arrow color when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-dot-empty-background","title":"--mbx-carousel-dot-empty-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-carousel-dot-empty-background-light</code> and <code>--mbx-carousel-dot-empty-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-dot-empty-background-light","title":"--mbx-carousel-dot-empty-background-light","text":"Fallback Default --mbx-carousel-dot-empty-background radial-gradient(#000000, #181818, #282828, #3a3a3a, #4c4c4c, #6b6a6a, #858383) <p>Carousel empty dot background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-dot-empty-background-dark","title":"--mbx-carousel-dot-empty-background-dark","text":"Fallback Default --mbx-carousel-dot-empty-background radial-gradient(#000000, #181818, #282828, #3a3a3a, #4c4c4c, #6b6a6a, #858383) <p>Carousel empty dot background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-dot-full-background","title":"--mbx-carousel-dot-full-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-carousel-dot-full-background-light</code> and <code>--mbx-carousel-dot-full-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-dot-full-background-light","title":"--mbx-carousel-dot-full-background-light","text":"Fallback Default --mbx-carousel-dot-full-background linear-gradient(to top, #ff8007, #fd8616, #fd9b3f, #fd9c40, #fcbb7f, #fad6b4) <p>Carousel full dot background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/css-vars/#-mbx-carousel-dot-full-background-dark","title":"--mbx-carousel-dot-full-background-dark","text":"Fallback Default --mbx-carousel-dot-full-background linear-gradient(to top, #ff8007, #fd8616, #fd9b3f, #fd9c40, #fcbb7f, #fad6b4) <p>Carousel full dot background when dark mode is <code>on</code></p> <p></p>"},{"location":"components/molecules/Carousel/props/","title":"Carousel properties","text":""},{"location":"components/molecules/Carousel/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/Carousel/props/#props-table","title":"Props table","text":"Parameter Type Default elements (JSX.Element | string)[] [] onChange (newValue: number) =&gt; void () =&gt; {} value number 0 arrowClassName string / dotClassName string /"},{"location":"components/molecules/Carousel/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/Carousel/props/#elements","title":"elements","text":"Type Default (JSX.Element | string)[] [] <p>Carousel elements</p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/props/#onchange","title":"onChange","text":"Type Default (newValue: number) =&gt; void () =&gt; {} <p>Callback triggered when Carousel component input value is changed by the user</p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/props/#value","title":"value","text":"Type Default number 0 <p>Initial element to show (as index)</p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/props/#arrowclassname","title":"arrowClassName","text":"Type Default string / <p>Custom classname applied on the Carousel arrows</p> <p></p> <p></p>"},{"location":"components/molecules/Carousel/props/#dotclassname","title":"dotClassName","text":"Type Default string / <p>Custom classname applied on every Carousel dot</p> <p></p>"},{"location":"components/molecules/Container/","title":"Container page","text":"<p>A simple but smart container, enhanced with MoBrix-ui common props</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/Container/css-vars/","title":"Container CSS variables","text":""},{"location":"components/molecules/Container/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/Container/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-container-background / / --mbx-container-background-light --mbx-container-background --mbx-background-light --mbx-container-background-dark --mbx-container-background --mbx-background-dark --mbx-container-text-color / / --mbx-container-text-color-light --mbx-container-text-color --mbx-text-color-light --mbx-container-text-color-dark --mbx-container-text-color --mbx-text-color-dark"},{"location":"components/molecules/Container/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/Container/css-vars/#-mbx-container-background","title":"--mbx-container-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-container-background-light</code> and <code>--mbx-container-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Container/css-vars/#-mbx-container-background-light","title":"--mbx-container-background-light","text":"Fallback Default --mbx-container-background --mbx-background-light <p>Container background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Container/css-vars/#-mbx-container-background-dark","title":"--mbx-container-background-dark","text":"Fallback Default --mbx-container-background --mbx-background-dark <p>Container background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Container/css-vars/#-mbx-container-text-color","title":"--mbx-container-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-container-text-color-light</code> and <code>--mbx-container-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Container/css-vars/#-mbx-container-text-color-light","title":"--mbx-container-text-color-light","text":"Fallback Default --mbx-container-text-color --mbx-text-color-light <p>Container text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Container/css-vars/#-mbx-container-text-color-dark","title":"--mbx-container-text-color-dark","text":"Fallback Default --mbx-container-text-color --mbx-text-color-dark <p>Container text color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/molecules/Container/props/","title":"Container properties","text":""},{"location":"components/molecules/Container/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/Container/props/#props-table","title":"Props table","text":"Parameter Type Default children any / wrapper <code>div</code> | <code>header</code> | <code>footer</code> div"},{"location":"components/molecules/Container/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/Container/props/#children","title":"children","text":"Type Default any / <p>content to render inside Container</p> <p></p> <p></p>"},{"location":"components/molecules/Container/props/#wrapper","title":"wrapper","text":"Type Default <code>div</code> | <code>header</code> | <code>footer</code> div <p>component wrapper type</p> <p></p>"},{"location":"components/molecules/DismissableCard/","title":"DismissableCard page","text":"<p>A standard Card with a dismiss function</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/DismissableCard/css-vars/","title":"DismissableCard CSS variables","text":""},{"location":"components/molecules/DismissableCard/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/DismissableCard/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-dismissablecard-background / / --mbx-dismissablecard-background-light --mbx-dismissablecard-background --mbx-card-background-light --mbx-dismissablecard-background-dark --mbx-dismissablecard-background --mbx-card-background-dark --mbx-dismissablecard-text-color / / --mbx-dismissablecard-text-color-light --mbx-dismissablecard-text-color --mbx-card-text-color-light --mbx-dismissablecard-text-color-dark --mbx-dismissablecard-text-color --mbx-card-text-color-dark --mbx-dismissablecard-x-color / / --mbx-dismissablecard-x-color-light --mbx-dismissablecard-x-color --mbx-dismissablecard-text-color-light --mbx-dismissablecard-x-color-dark --mbx-dismissablecard-x-color --mbx-dismissablecard-text-color-dark --mbx-dismissablecard-x-color-hover / / --mbx-dismissablecard-x-color-hover-light --mbx-dismissablecard-x-color-hover red --mbx-dismissablecard-x-color-hover-dark --mbx-dismissablecard-x-color-hover red"},{"location":"components/molecules/DismissableCard/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-background","title":"--mbx-dismissablecard-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dismissablecard-background-light</code> and <code>--mbx-dismissablecard-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-background-light","title":"--mbx-dismissablecard-background-light","text":"Fallback Default --mbx-dismissablecard-background --mbx-card-background-light <p>DismissableCard background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-background-dark","title":"--mbx-dismissablecard-background-dark","text":"Fallback Default --mbx-dismissablecard-background --mbx-card-background-dark <p>DismissableCard background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-text-color","title":"--mbx-dismissablecard-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dismissablecard-text-color-light</code> and <code>--mbx-dismissablecard-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-text-color-light","title":"--mbx-dismissablecard-text-color-light","text":"Fallback Default --mbx-dismissablecard-text-color --mbx-card-text-color-light <p>DismissableCard text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-text-color-dark","title":"--mbx-dismissablecard-text-color-dark","text":"Fallback Default --mbx-dismissablecard-text-color --mbx-card-text-color-dark <p>DismissableCard text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-x-color","title":"--mbx-dismissablecard-x-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dismissablecard-x-color-light</code> and <code>--mbx-dismissablecard-x-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-x-color-light","title":"--mbx-dismissablecard-x-color-light","text":"Fallback Default --mbx-dismissablecard-x-color --mbx-dismissablecard-text-color-light <p>DismissableCard x icon color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-x-color-dark","title":"--mbx-dismissablecard-x-color-dark","text":"Fallback Default --mbx-dismissablecard-x-color --mbx-dismissablecard-text-color-dark <p>DismissableCard x icon color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-x-color-hover","title":"--mbx-dismissablecard-x-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dismissablecard-x-color-hover-light</code> and <code>--mbx-dismissablecard-x-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-x-color-hover-light","title":"--mbx-dismissablecard-x-color-hover-light","text":"Fallback Default --mbx-dismissablecard-x-color-hover red <p>DismissableCard x icon color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/css-vars/#-mbx-dismissablecard-x-color-hover-dark","title":"--mbx-dismissablecard-x-color-hover-dark","text":"Fallback Default --mbx-dismissablecard-x-color-hover red <p>DismissableCard x icon color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/molecules/DismissableCard/props/","title":"DismissableCard properties","text":""},{"location":"components/molecules/DismissableCard/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/DismissableCard/props/#props-table","title":"Props table","text":"Parameter Type Default onClose () =&gt; void () =&gt; {} alwaysVisible boolean false header JSX.Element | string / body JSX.Element | string / footer JSX.Element | string / noDivider boolean / noTopDivider boolean / noBottomDivider boolean / children <code>JSX.Element</code> | <code>string</code> / headerClassName string / bodyClassName string / footerClassName string / headerProps Record / bodyProps Record / footerProps Record /"},{"location":"components/molecules/DismissableCard/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/DismissableCard/props/#onclose","title":"onClose","text":"Type Default () =&gt; void () =&gt; {} <p>Callback triggered when the X icon is clicked</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#alwaysvisible","title":"alwaysVisible","text":"Type Default boolean false <p>If <code>true</code>, the DismissableCard won't disappear if the X icon is clicked (can be hidden with <code>hide</code> shared prop)</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#header","title":"header","text":"Type Default JSX.Element | string / <p>Card header content - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#body","title":"body","text":"Type Default JSX.Element | string / <p>Card body content - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#footer","title":"footer","text":"Type Default JSX.Element | string / <p>Card footer content - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#nodivider","title":"noDivider","text":"Type Default boolean / <p>If <code>true</code>, hide all dividers - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#notopdivider","title":"noTopDivider","text":"Type Default boolean / <p>If <code>true</code>, hide the top divider, between header and body - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#nobottomdivider","title":"noBottomDivider","text":"Type Default boolean / <p>If <code>true</code>, hide the top divider, between body and footer - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#children","title":"children","text":"Type Default <code>JSX.Element</code> | <code>string</code> / <p>Card content - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#headerclassname","title":"headerClassName","text":"Type Default string / <p>Custom classname applied on the Card header - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#bodyclassname","title":"bodyClassName","text":"Type Default string / <p>Custom classname applied on the Card body - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#footerclassname","title":"footerClassName","text":"Type Default string / <p>Custom classname applied on the Card footer - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#headerprops","title":"headerProps","text":"Type Default Record / <p>Custom props applied on the Card header - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#bodyprops","title":"bodyProps","text":"Type Default Record / <p>Custom props applied on the Card body - extended from Card component</p> <p></p> <p></p>"},{"location":"components/molecules/DismissableCard/props/#footerprops","title":"footerProps","text":"Type Default Record / <p>Custom props applied on the Card footer - extended from Card component</p> <p></p>"},{"location":"components/molecules/Dropdown/","title":"Dropdown page","text":"<p>Show a list of elements in a dropdown menu (with fade-in and out effects). Can be easily customized and every element style and behaviour (with a callback) can be customized too.</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/Dropdown/css-vars/","title":"Dropdown CSS variables","text":""},{"location":"components/molecules/Dropdown/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/Dropdown/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-dropdown-background / / --mbx-dropdown-background-light --mbx-dropdown-background --mbx-background-light --mbx-dropdown-background-dark --mbx-dropdown-background --mbx-background-dark --mbx-dropdown-text-color / / --mbx-dropdown-text-color-light --mbx-dropdown-text-color --mbx-text-color-light --mbx-dropdown-text-color-dark --mbx-dropdown-text-color --mbx-text-color-dark --mbx-dropdown-background-hover / / --mbx-dropdown-background-hover-light --mbx-dropdown-background --mbx-background-hover-light --mbx-dropdown-background-hover-dark --mbx-dropdown-background --mbx-background-hover-dark --mbx-dropdown-text-color-hover / / --mbx-dropdown-text-color-hover-light --mbx-dropdown-background-hover --mbx-text-color-hover-light --mbx-dropdown-text-color-hover-dark --mbx-dropdown-background-hover --mbx-text-color-hover-dark --mbx-dropdown-arrow-color / / --mbx-dropdown-arrow-color-light --mbx-dropdown-arrow-color --mbx-dropdown-text-color-light --mbx-dropdown-arrow-color-dark --mbx-dropdown-arrow-color --mbx-dropdown-text-color-dark --mbx-dropdown-arrow-color-hover / / --mbx-dropdown-arrow-color-hover-light --mbx-dropdown-arrow-color-hover --mbx-dropdown-arrow-color-light --mbx-dropdown-arrow-color-hover-dark --mbx-dropdown-arrow-color-hover --mbx-dropdown-arrow-color-dark"},{"location":"components/molecules/Dropdown/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-background","title":"--mbx-dropdown-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dropdown-background-light</code> and <code>--mbx-dropdown-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-background-light","title":"--mbx-dropdown-background-light","text":"Fallback Default --mbx-dropdown-background --mbx-background-light <p>Dropdown background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-background-dark","title":"--mbx-dropdown-background-dark","text":"Fallback Default --mbx-dropdown-background --mbx-background-dark <p>Dropdown background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-text-color","title":"--mbx-dropdown-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dropdown-text-color-light</code> and <code>--mbx-dropdown-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-text-color-light","title":"--mbx-dropdown-text-color-light","text":"Fallback Default --mbx-dropdown-text-color --mbx-text-color-light <p>Dropdown text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-text-color-dark","title":"--mbx-dropdown-text-color-dark","text":"Fallback Default --mbx-dropdown-text-color --mbx-text-color-dark <p>Dropdown text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-background-hover","title":"--mbx-dropdown-background-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dropdown-background-hover-light</code> and <code>--mbx-dropdown-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-background-hover-light","title":"--mbx-dropdown-background-hover-light","text":"Fallback Default --mbx-dropdown-background --mbx-background-hover-light <p>Dropdown background when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-background-hover-dark","title":"--mbx-dropdown-background-hover-dark","text":"Fallback Default --mbx-dropdown-background --mbx-background-hover-dark <p>Dropdown background when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-text-color-hover","title":"--mbx-dropdown-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dropdown-text-color-hover-light</code> and <code>--mbx-dropdown-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-text-color-hover-light","title":"--mbx-dropdown-text-color-hover-light","text":"Fallback Default --mbx-dropdown-background-hover --mbx-text-color-hover-light <p>Dropdown text color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-text-color-hover-dark","title":"--mbx-dropdown-text-color-hover-dark","text":"Fallback Default --mbx-dropdown-background-hover --mbx-text-color-hover-dark <p>Dropdown text color when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-arrow-color","title":"--mbx-dropdown-arrow-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dropdown-arrow-color-light</code> and <code>--mbx-dropdown-arrow-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-arrow-color-light","title":"--mbx-dropdown-arrow-color-light","text":"Fallback Default --mbx-dropdown-arrow-color --mbx-dropdown-text-color-light <p>Dropdown arrow color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-arrow-color-dark","title":"--mbx-dropdown-arrow-color-dark","text":"Fallback Default --mbx-dropdown-arrow-color --mbx-dropdown-text-color-dark <p>Dropdown arrow color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-arrow-color-hover","title":"--mbx-dropdown-arrow-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-dropdown-arrow-color-hover-light</code> and <code>--mbx-dropdown-arrow-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-arrow-color-hover-light","title":"--mbx-dropdown-arrow-color-hover-light","text":"Fallback Default --mbx-dropdown-arrow-color-hover --mbx-dropdown-arrow-color-light <p>Dropdown arrow color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/css-vars/#-mbx-dropdown-arrow-color-hover-dark","title":"--mbx-dropdown-arrow-color-hover-dark","text":"Fallback Default --mbx-dropdown-arrow-color-hover --mbx-dropdown-arrow-color-dark <p>Dropdown arrow color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/molecules/Dropdown/props/","title":"Dropdown properties","text":""},{"location":"components/molecules/Dropdown/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/Dropdown/props/#props-table","title":"Props table","text":"Parameter Type Default value number / elements (JSX.Element | string)[] [] hideArrow boolean false onChange (newValue: number) =&gt; void () =&gt; {}"},{"location":"components/molecules/Dropdown/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/Dropdown/props/#value","title":"value","text":"Type Default number / <p>actual selected element (as index). If not set, default value will be used.</p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/props/#elements","title":"elements","text":"Type Default (JSX.Element | string)[] [] <p>Dropdown content elements</p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/props/#hidearrow","title":"hideArrow","text":"Type Default boolean false <p>If <code>true</code>, hide the arrow icon near selected element</p> <p></p> <p></p>"},{"location":"components/molecules/Dropdown/props/#onchange","title":"onChange","text":"Type Default (newValue: number) =&gt; void () =&gt; {} <p>Callback triggered when selecting new element from dropdown</p> <p></p>"},{"location":"components/molecules/ExpandableContainer/","title":"ExpandableContainer page","text":"<p>An exapandable container, to hide/show some content on demand.</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/ExpandableContainer/css-vars/","title":"ExpandableContainer CSS variables","text":""},{"location":"components/molecules/ExpandableContainer/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/ExpandableContainer/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-expandablecontainer-background / / --mbx-expandablecontainer-background-light --mbx-expandablecontainer-background mbx-container-background-light --mbx-expandablecontainer-background-dark --mbx-expandablecontainer-background mbx-container-background-dark --mbx-expandablecontainer-text-color / / --mbx-expandablecontainer-text-color-light --mbx-expandablecontainer-text-color mbx-container-text-color-light --mbx-expandablecontainer-text-color-dark --mbx-expandablecontainer-text-color mbx-container-text-color-dark --mbx-expandablecontainer-arrow-color / / --mbx-expandablecontainer-arrow-color-light --mbx-expandablecontainer-arrow-color --mbx-expandablecontainer-text-color-light --mbx-expandablecontainer-arrow-color-dark --mbx-expandablecontainer-arrow-color --mbx-expandablecontainer-text-color-dark --mbx-expandablecontainer-arrow-color-hover / / --mbx-expandablecontainer-arrow-color-hover-light --mbx-expandablecontainer-arrow-color-hover --mbx-expandablecontainer-arrow-color-lrrowight --mbx-expandablecontainer-arrow-color-hover-dark --mbx-expandablecontainer-arrow-color-hover --mbx-expandablecontainer-a-color-dark"},{"location":"components/molecules/ExpandableContainer/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-background","title":"--mbx-expandablecontainer-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-expandablecontainer-background-light</code> and <code>--mbx-expandablecontainer-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-background-light","title":"--mbx-expandablecontainer-background-light","text":"Fallback Default --mbx-expandablecontainer-background mbx-container-background-light <p>ExpandableContainer background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-background-dark","title":"--mbx-expandablecontainer-background-dark","text":"Fallback Default --mbx-expandablecontainer-background mbx-container-background-dark <p>ExpandableContainer background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-text-color","title":"--mbx-expandablecontainer-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-expandablecontainer-text-color-light</code> and <code>--mbx-expandablecontainer-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-text-color-light","title":"--mbx-expandablecontainer-text-color-light","text":"Fallback Default --mbx-expandablecontainer-text-color mbx-container-text-color-light <p>ExpandableContainer text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-text-color-dark","title":"--mbx-expandablecontainer-text-color-dark","text":"Fallback Default --mbx-expandablecontainer-text-color mbx-container-text-color-dark <p>ExpandableContainer text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-arrow-color","title":"--mbx-expandablecontainer-arrow-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-expandablecontainer-arrow-color-light</code> and <code>--mbx-expandablecontainer-arrow-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-arrow-color-light","title":"--mbx-expandablecontainer-arrow-color-light","text":"Fallback Default --mbx-expandablecontainer-arrow-color --mbx-expandablecontainer-text-color-light <p>ExpandableContainer arrow color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-arrow-color-dark","title":"--mbx-expandablecontainer-arrow-color-dark","text":"Fallback Default --mbx-expandablecontainer-arrow-color --mbx-expandablecontainer-text-color-dark <p>ExpandableContainer arrow color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-arrow-color-hover","title":"--mbx-expandablecontainer-arrow-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-expandablecontainer-arrow-color-hover-light</code> and <code>--mbx-expandablecontainer-arrow-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-arrow-color-hover-light","title":"--mbx-expandablecontainer-arrow-color-hover-light","text":"Fallback Default --mbx-expandablecontainer-arrow-color-hover --mbx-expandablecontainer-arrow-color-lrrowight <p>ExpandableContainer arrow color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/css-vars/#-mbx-expandablecontainer-arrow-color-hover-dark","title":"--mbx-expandablecontainer-arrow-color-hover-dark","text":"Fallback Default --mbx-expandablecontainer-arrow-color-hover --mbx-expandablecontainer-a-color-dark <p>ExpandableContainer arrow color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/molecules/ExpandableContainer/props/","title":"ExpandableContainer properties","text":""},{"location":"components/molecules/ExpandableContainer/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/ExpandableContainer/props/#props-table","title":"Props table","text":"Parameter Type Default children any / wrapper <code>div</code> | <code>header</code> | <code>footer</code> div expanded boolean / compact boolean / onChange (newValue: boolean) =&gt; void () =&gt; {}"},{"location":"components/molecules/ExpandableContainer/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/ExpandableContainer/props/#children","title":"children","text":"Type Default any / <p>content to render inside Container - extended from Container component</p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/props/#wrapper","title":"wrapper","text":"Type Default <code>div</code> | <code>header</code> | <code>footer</code> div <p>component wrapper type - extended from Container component</p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/props/#expanded","title":"expanded","text":"Type Default boolean / <p>Extra content showed only when container is expanded (<code>compact</code> === <code>true</code>)</p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/props/#compact","title":"compact","text":"Type Default boolean / <p>if true, shows the whole container content</p> <p></p> <p></p>"},{"location":"components/molecules/ExpandableContainer/props/#onchange","title":"onChange","text":"Type Default (newValue: boolean) =&gt; void () =&gt; {} <p>Callback triggered when ExpandableContainer component input value is changed by the user</p> <p></p>"},{"location":"components/molecules/FormField/","title":"FormField page","text":"<p>A single form field. Depending on its <code>type</code>, a different input component is used inside</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/FormField/css-vars/","title":"FormField CSS variables","text":""},{"location":"components/molecules/FormField/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/FormField/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-formfield-background / / --mbx-formfield-background-dark --mbx-formfield-background --mbx-background-dark --mbx-formfield-background-light --mbx-formfield-background --mbx-background-light --mbx-formfield-text-color / / --mbx-formfield-text-color-light --mbx-formfield-text-color --mbx-text-color-light --mbx-formfield-text-color-dark --mbx-formfield-text-color --mbx-text-color-dark --mbx-formfield-background-hover / / --mbx-formfield-background-hover-light --mbx-formfield-background-hover --mbx-background-hover-light --mbx-formfield-background-hover-dark --mbx-formfield-background-hover --mbx-background-hover-light --mbx-formfield-text-color-hover / / --mbx-formfield-text-color-hover-light --mbx-formfield-text-color-hover --mbx-text-color-hover-light --mbx-formfield-text-color-hover-dark --mbx-formfield-text-color-hover --mbx-text-color-hover-dark --mbx-formfield-error-border / / --mbx-formfield-error-border-light --mbx-formfield-error-border red --mbx-formfield-error-border-dark --mbx-formfield-error-border red --mbx-formfield-error-text / / --mbx-formfield-error-text-light --mbx-formfield-error-text red --mbx-formfield-error-text-dark --mbx-formfield-error-text red"},{"location":"components/molecules/FormField/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-background","title":"--mbx-formfield-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-formfield-background-light</code> and <code>--mbx-formfield-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-background-dark","title":"--mbx-formfield-background-dark","text":"Fallback Default --mbx-formfield-background --mbx-background-dark <p>FormField background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-background-light","title":"--mbx-formfield-background-light","text":"Fallback Default --mbx-formfield-background --mbx-background-light <p>FormField background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-text-color","title":"--mbx-formfield-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-formfield-text-color-light</code> and <code>--mbx-formfield-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-text-color-light","title":"--mbx-formfield-text-color-light","text":"Fallback Default --mbx-formfield-text-color --mbx-text-color-light <p>FormField text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-text-color-dark","title":"--mbx-formfield-text-color-dark","text":"Fallback Default --mbx-formfield-text-color --mbx-text-color-dark <p>FormField text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-background-hover","title":"--mbx-formfield-background-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-formfield-background-hover-light</code> and <code>--mbx-formfield-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-background-hover-light","title":"--mbx-formfield-background-hover-light","text":"Fallback Default --mbx-formfield-background-hover --mbx-background-hover-light <p>FormField background when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-background-hover-dark","title":"--mbx-formfield-background-hover-dark","text":"Fallback Default --mbx-formfield-background-hover --mbx-background-hover-light <p>FormField background when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-text-color-hover","title":"--mbx-formfield-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-formfield-text-color-hover-light</code> and <code>--mbx-formfield-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-text-color-hover-light","title":"--mbx-formfield-text-color-hover-light","text":"Fallback Default --mbx-formfield-text-color-hover --mbx-text-color-hover-light <p>FormField text color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-text-color-hover-dark","title":"--mbx-formfield-text-color-hover-dark","text":"Fallback Default --mbx-formfield-text-color-hover --mbx-text-color-hover-dark <p>FormField text color when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-error-border","title":"--mbx-formfield-error-border","text":"Fallback Default / / <p>Fallback value for <code>--mbx-formfield-error-border-light</code> and <code>--mbx-formfield-error-border-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-error-border-light","title":"--mbx-formfield-error-border-light","text":"Fallback Default --mbx-formfield-error-border red <p>FormField error box border color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-error-border-dark","title":"--mbx-formfield-error-border-dark","text":"Fallback Default --mbx-formfield-error-border red <p>FormField error box border color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-error-text","title":"--mbx-formfield-error-text","text":"Fallback Default / / <p>Fallback value for <code>--mbx-formfield-error-text-light</code> and <code>--mbx-formfield-error-text-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-error-text-light","title":"--mbx-formfield-error-text-light","text":"Fallback Default --mbx-formfield-error-text red <p>FormField error box text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/FormField/css-vars/#-mbx-formfield-error-text-dark","title":"--mbx-formfield-error-text-dark","text":"Fallback Default --mbx-formfield-error-text red <p>FormField error box text color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/molecules/FormField/props/","title":"FormField properties","text":""},{"location":"components/molecules/FormField/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/FormField/props/#props-table","title":"Props table","text":"Parameter Type Default value / / type <code>boolean</code> | <code>text</code> | <code>numeric</code> | <code>radio</code> | <code>checkbox</code> | <code>toggle</code> | <code>rater</code> | <code>slider</code> | <code>input</code> | <code>counter</code> 'text' placeholder string / required boolean / validate (fieldValue: any) =&gt; boolean () =&gt; \u02da{} header <code>JSX.Element</code> | <code>string</code> / headerClassName string / headerProps Record / errorLabel <code>JSX.Element</code> | <code>string</code> /"},{"location":"components/molecules/FormField/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/FormField/props/#value","title":"value","text":"Type Default / / <p>FormField input content</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/props/#type","title":"type","text":"Type Default <code>boolean</code> | <code>text</code> | <code>numeric</code> | <code>radio</code> | <code>checkbox</code> | <code>toggle</code> | <code>rater</code> | <code>slider</code> | <code>input</code> | <code>counter</code> 'text' <p>The field type. It determines the UI component to be used to render it. Allowed types are:</p> <ul> <li><code>boolean</code> (rendered as a CheckBox)</li> <li><code>numeric</code> (rendered as a Counter)</li> <li><code>text</code> (rendered as a Input)</li> <li><code>radio</code> (rendered as a RadioButton)</li> <li><code>checkbox</code> (rendered as a CheckBox)</li> <li><code>toggle</code> (rendered as a Toggle)</li> <li><code>rater</code> (rendered as a Rater)</li> <li><code>slider</code> (rendered as a Slider)</li> <li><code>input</code> (rendered as a Input)</li> <li><code>counter</code> (rendered as a Counter)</li> </ul> <p></p> <p></p>"},{"location":"components/molecules/FormField/props/#placeholder","title":"placeholder","text":"Type Default string /"},{"location":"components/molecules/FormField/props/#required","title":"required","text":"Type Default boolean / <p>If true, the field switch to error state if its value is empty</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/props/#validate","title":"validate","text":"Type Default (fieldValue: any) =&gt; boolean () =&gt; \u02da{} <p>Custom validation function called on submit</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/props/#header","title":"header","text":"Type Default <code>JSX.Element</code> | <code>string</code> / <p>Form field header</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/props/#headerclassname","title":"headerClassName","text":"Type Default string / <p>Custom classname applied on every header element</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/props/#headerprops","title":"headerProps","text":"Type Default Record / <p>Custom props applied on every header element (including MoBrix-ui shared props)</p> <p></p> <p></p>"},{"location":"components/molecules/FormField/props/#errorlabel","title":"errorLabel","text":"Type Default <code>JSX.Element</code> | <code>string</code> / <p>Custom error box content, displayed when FormField is in error state</p> <p></p>"},{"location":"components/molecules/List/","title":"List page","text":"<p>A custom bullet list, that support any type of elements</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/List/css-vars/","title":"List CSS variables","text":""},{"location":"components/molecules/List/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/List/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-list-text-color / / --mbx-list-text-color-light --mbx-list-text-color --mbx-text-color-light --mbx-list-text-color-dark --mbx-list-text-color --mbx-text-color-dark --mbx-list-text-color-hover / / --mbx-list-text-color-hover-light --mbx-list-text-color-hover --mbx-text-color-hover-light --mbx-list-text-color-hover-dark --mbx-list-text-color-hover --mbx-text-color-hover-dark"},{"location":"components/molecules/List/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/List/css-vars/#-mbx-list-text-color","title":"--mbx-list-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-list-text-color-light</code> and <code>--mbx-list-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/List/css-vars/#-mbx-list-text-color-light","title":"--mbx-list-text-color-light","text":"Fallback Default --mbx-list-text-color --mbx-text-color-light <p>List element text color when dark is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/List/css-vars/#-mbx-list-text-color-dark","title":"--mbx-list-text-color-dark","text":"Fallback Default --mbx-list-text-color --mbx-text-color-dark <p>List element text color when dark is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/List/css-vars/#-mbx-list-text-color-hover","title":"--mbx-list-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-list-text-color-hover-light</code> and <code>--mbx-list-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/List/css-vars/#-mbx-list-text-color-hover-light","title":"--mbx-list-text-color-hover-light","text":"Fallback Default --mbx-list-text-color-hover --mbx-text-color-hover-light <p>List element text color when dark is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/List/css-vars/#-mbx-list-text-color-hover-dark","title":"--mbx-list-text-color-hover-dark","text":"Fallback Default --mbx-list-text-color-hover --mbx-text-color-hover-dark <p>List element text color when dark is <code>on</code>, on hover</p> <p></p>"},{"location":"components/molecules/List/props/","title":"List properties","text":""},{"location":"components/molecules/List/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/List/props/#props-table","title":"Props table","text":"Parameter Type Default elements (<code>JSX.Element</code> | <code>string</code>)[] / onClick () =&gt; void () =&gt; {}"},{"location":"components/molecules/List/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/List/props/#elements","title":"elements","text":"Type Default (<code>JSX.Element</code> | <code>string</code>)[] / <p>List elements</p> <p></p> <p></p>"},{"location":"components/molecules/List/props/#onclick","title":"onClick","text":"Type Default () =&gt; void () =&gt; {} <p>Callback triggered when a list element is clicked</p> <p></p>"},{"location":"components/molecules/Modal/","title":"Modal page","text":"<p>A Modal component, with an optional close button</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/Modal/css-vars/","title":"Modal CSS variables","text":""},{"location":"components/molecules/Modal/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/Modal/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-modal-background / / --mbx-modal-background-light --mbx-modal-background rgba(0, 0, 0, 0.8) --mbx-modal-background-dark --mbx-modal-background rgba(0, 0, 0, 0.8) --mbx-modal-x-color / / --mbx-modal-x-color-light --mbx-modal-x-color white --mbx-modal-x-color-dark --mbx-modal-x-color white --mbx-modal-x-color-hover / / --mbx-modal-x-color-hover-light --mbx-modal-x-color-hover --mbx-dismissablecard-x-color-hover-light --mbx-modal-x-color-hover-dark --mbx-modal-x-color-hover --mbx-dismissablecard-x-color-hover-dark"},{"location":"components/molecules/Modal/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/Modal/css-vars/#-mbx-modal-background","title":"--mbx-modal-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-modal-background-light</code> and <code>--mbx-modal-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Modal/css-vars/#-mbx-modal-background-light","title":"--mbx-modal-background-light","text":"Fallback Default --mbx-modal-background rgba(0, 0, 0, 0.8) <p>Modal background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Modal/css-vars/#-mbx-modal-background-dark","title":"--mbx-modal-background-dark","text":"Fallback Default --mbx-modal-background rgba(0, 0, 0, 0.8) <p>Modal background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Modal/css-vars/#-mbx-modal-x-color","title":"--mbx-modal-x-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-modal-x-color-light</code> and <code>--mbx-modal-x-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Modal/css-vars/#-mbx-modal-x-color-light","title":"--mbx-modal-x-color-light","text":"Fallback Default --mbx-modal-x-color white <p>Modal x icon color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Modal/css-vars/#-mbx-modal-x-color-dark","title":"--mbx-modal-x-color-dark","text":"Fallback Default --mbx-modal-x-color white <p>Modal x icon color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Modal/css-vars/#-mbx-modal-x-color-hover","title":"--mbx-modal-x-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-modal-x-color-hover-light</code> and <code>--mbx-modal-x-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Modal/css-vars/#-mbx-modal-x-color-hover-light","title":"--mbx-modal-x-color-hover-light","text":"Fallback Default --mbx-modal-x-color-hover --mbx-dismissablecard-x-color-hover-light <p>Modal x icon color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/Modal/css-vars/#-mbx-modal-x-color-hover-dark","title":"--mbx-modal-x-color-hover-dark","text":"Fallback Default --mbx-modal-x-color-hover --mbx-dismissablecard-x-color-hover-dark <p>Modal x icon color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/molecules/Modal/props/","title":"Modal properties","text":""},{"location":"components/molecules/Modal/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/Modal/props/#props-table","title":"Props table","text":"Parameter Type Default onClose () =&gt; void () =&gt; {} children <code>JSX.Element</code> | <code>string</code> /"},{"location":"components/molecules/Modal/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/Modal/props/#onclose","title":"onClose","text":"Type Default () =&gt; void () =&gt; {} <p>callback triggered when Modal is closed</p> <p></p> <p></p>"},{"location":"components/molecules/Modal/props/#children","title":"children","text":"Type Default <code>JSX.Element</code> | <code>string</code> / <p>Modal content</p> <p></p>"},{"location":"components/molecules/Popup/","title":"Popup page","text":"<p>A Popup container, displayed upon every other component, overlayed</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/Popup/css-vars/","title":"Popup CSS variables","text":""},{"location":"components/molecules/Popup/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/Popup/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-popup-background / / --mbx-popup-background-light --mbx-popup-background --mbx-background-light --mbx-popup-background-dark --mbx-popup-background --mbx-background-dark --mbx-popup-text-color / / --mbx-popup-text-color-light --mbx-popup-text-color --mbx-text-color-light --mbx-popup-text-color-dark --mbx-popup-text-color --mbx-text-color-dark"},{"location":"components/molecules/Popup/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/Popup/css-vars/#-mbx-popup-background","title":"--mbx-popup-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-popup-background-light</code> and <code>--mbx-popup-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Popup/css-vars/#-mbx-popup-background-light","title":"--mbx-popup-background-light","text":"Fallback Default --mbx-popup-background --mbx-background-light <p>Popup background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Popup/css-vars/#-mbx-popup-background-dark","title":"--mbx-popup-background-dark","text":"Fallback Default --mbx-popup-background --mbx-background-dark <p>Popup background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Popup/css-vars/#-mbx-popup-text-color","title":"--mbx-popup-text-color","text":"Fallback Default / / <p>Fallback value for <code>and</code></p> <p></p> <p></p>"},{"location":"components/molecules/Popup/css-vars/#-mbx-popup-text-color-light","title":"--mbx-popup-text-color-light","text":"Fallback Default --mbx-popup-text-color --mbx-text-color-light <p>Popup text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Popup/css-vars/#-mbx-popup-text-color-dark","title":"--mbx-popup-text-color-dark","text":"Fallback Default --mbx-popup-text-color --mbx-text-color-dark <p>Popup text color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/molecules/Popup/props/","title":"Popup properties","text":""},{"location":"components/molecules/Popup/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/Popup/props/#props-table","title":"Props table","text":"Parameter Type Default onClose () =&gt; void () =&gt; {} children <code>JSX.Element</code> | <code>string</code> /"},{"location":"components/molecules/Popup/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/Popup/props/#onclose","title":"onClose","text":"Type Default () =&gt; void () =&gt; {} <p>callback triggered when Popup is closed</p> <p></p> <p></p>"},{"location":"components/molecules/Popup/props/#children","title":"children","text":"Type Default <code>JSX.Element</code> | <code>string</code> / <p>Popup content</p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/","title":"RadioButtonGroup page","text":"<p>A flexible and fully customizable radio buttons group</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/RadioButtonGroup/css-vars/","title":"RadioButtonGroup CSS variables","text":""},{"location":"components/molecules/RadioButtonGroup/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-radiogroup-background / / --mbx-radiogroup-background-light --mbx-radiogroup-background --mbx-background-light --mbx-radiogroup-background-dark --mbx-radiogroup-background --mbx-background-dark --mbx-radiogroup-text-color / / --mbx-radiogroup-text-color-light --mbx-radiogroup-text-color --mbx-text-color-light --mbx-radiogroup-text-color-dark --mbx-radiogroup-text-color --mbx-text-color-dark --mbx-radiogroup-radio-background / / --mbx-radiogroup-radio-background-light --mbx-radiogroup-radio-background --mbx-radio-background-light --mbx-radiogroup-radio-background-dark --mbx-radiogroup-radio-background --mbx-radio-background-dark --mbx-radiogroup-radio-background-hover / / --mbx-radiogroup-radio-background-hover-light --mbx-radiogroup-radio-background-hover --mbx-radio-background-hover-light --mbx-radiogroup-radio-background-hover-dark --mbx-radiogroup-radio-background-hover --mbx-radio-background-hover-dark --mbx-radiogroup-radio-icon-background / / --mbx-radiogroup-radio-icon-background-light --mbx-radiogroup-radio-icon-background --mbx-radio-icon-background-light --mbx-radiogroup-radio-icon-background-dark --mbx-radiogroup-radio-icon-background --mbx-radio-icon-background-dark"},{"location":"components/molecules/RadioButtonGroup/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-background","title":"--mbx-radiogroup-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-radiogroup-background-light</code> and <code>--mbx-radiogroup-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-background-light","title":"--mbx-radiogroup-background-light","text":"Fallback Default --mbx-radiogroup-background --mbx-background-light <p>RadioGroup background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-background-dark","title":"--mbx-radiogroup-background-dark","text":"Fallback Default --mbx-radiogroup-background --mbx-background-dark <p>RadioGroup background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-text-color","title":"--mbx-radiogroup-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-radiogroup-text-color-light</code> and <code>--mbx-radiogroup-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-text-color-light","title":"--mbx-radiogroup-text-color-light","text":"Fallback Default --mbx-radiogroup-text-color --mbx-text-color-light <p>RadioGroup text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-text-color-dark","title":"--mbx-radiogroup-text-color-dark","text":"Fallback Default --mbx-radiogroup-text-color --mbx-text-color-dark <p>RadioGroup text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-radio-background","title":"--mbx-radiogroup-radio-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-radiogroup-radio-background-light</code> and <code>mbx-radiogroup-radio-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-radio-background-light","title":"--mbx-radiogroup-radio-background-light","text":"Fallback Default --mbx-radiogroup-radio-background --mbx-radio-background-light <p>Internal RadioButton background when dark mode is off</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-radio-background-dark","title":"--mbx-radiogroup-radio-background-dark","text":"Fallback Default --mbx-radiogroup-radio-background --mbx-radio-background-dark <p>Internal RadioButton background when dark mode is on</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-radio-background-hover","title":"--mbx-radiogroup-radio-background-hover","text":"Fallback Default / / <p>Fallback value for <code>mbx-radiogroup-radio-background-hover-light</code> and <code>mbx-radiogroup-radio-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-radio-background-hover-light","title":"--mbx-radiogroup-radio-background-hover-light","text":"Fallback Default --mbx-radiogroup-radio-background-hover --mbx-radio-background-hover-light <p>Internal RadioButton background when dark mode is off, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-radio-background-hover-dark","title":"--mbx-radiogroup-radio-background-hover-dark","text":"Fallback Default --mbx-radiogroup-radio-background-hover --mbx-radio-background-hover-dark <p>Internal RadioButton background when dark mode is on, on hover</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-radio-icon-background","title":"--mbx-radiogroup-radio-icon-background","text":"Fallback Default / / <p>Fallback value for <code>mbx-radiogroup-radio-icon-background-light</code> and <code>mbx-radiogroup-radio-icon-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-radio-icon-background-light","title":"--mbx-radiogroup-radio-icon-background-light","text":"Fallback Default --mbx-radiogroup-radio-icon-background --mbx-radio-icon-background-light <p>Internal RadioButton icon background when dark mode is off</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/css-vars/#-mbx-radiogroup-radio-icon-background-dark","title":"--mbx-radiogroup-radio-icon-background-dark","text":"Fallback Default --mbx-radiogroup-radio-icon-background --mbx-radio-icon-background-dark <p>Internal RadioButton icon background when dark mode is on</p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/props/","title":"RadioButtonGroup properties","text":""},{"location":"components/molecules/RadioButtonGroup/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/RadioButtonGroup/props/#props-table","title":"Props table","text":"Parameter Type Default value number / buttons { component: <code>JSX.Element</code>, text: <code>string</code>, textPosition:  <code>top</code> | <code>bottom</code> | <code>left</code> | <code>right</code> }[] / elementClassName string / radioProps RadioButtonProps / defaultPosition <code>top</code> | <code>bottom</code> | <code>left</code> | <code>right</code> left horizontal boolean false onChange (newValue: number) =&gt; void () =&gt; {}"},{"location":"components/molecules/RadioButtonGroup/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/RadioButtonGroup/props/#value","title":"value","text":"Type Default number / <p>Selected RadioButton (as index)</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/props/#buttons","title":"buttons","text":"Type Default { component: <code>JSX.Element</code>, text: <code>string</code>, textPosition:  <code>top</code> | <code>bottom</code> | <code>left</code> | <code>right</code> }[] / <p>Radio elements array. Every element UI can be driven with attributes. A radio element can contain 3 fields:<ul><li>- <code>component</code>: custom component rendered before radio button</li><li>- <code>text</code>: custom radio text showed near the radio button</li><li>- <code>textPosition</code>: custom text position</li> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/props/#elementclassname","title":"elementClassName","text":"Type Default string / <p>Classname applied on every radio element</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/props/#radioprops","title":"radioProps","text":"Type Default RadioButtonProps / <p>RadioButton props applied on every RadioButton element</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/props/#defaultposition","title":"defaultPosition","text":"Type Default <code>top</code> | <code>bottom</code> | <code>left</code> | <code>right</code> left <p>Default text position for RadioButton elements (when <code>textPosition</code> is not provided)</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/props/#horizontal","title":"horizontal","text":"Type Default boolean false <p>If <code>true</code>, the RadioButton elements are displayed horizontally</p> <p></p> <p></p>"},{"location":"components/molecules/RadioButtonGroup/props/#onchange","title":"onChange","text":"Type Default (newValue: number) =&gt; void () =&gt; {} <p>Callback triggered when a RadioButton is clicked by the user, giving its index as parameter</p> <p></p>"},{"location":"components/molecules/Review/","title":"Review page","text":"<p>A smart review container, useful to show reviews on your web app with custom data inside. Optionally, an external link can be set to redirect user to the platform where the review is located</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/Review/css-vars/","title":"Review CSS variables","text":""},{"location":"components/molecules/Review/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/Review/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-review-background / / --mbx-review-background-light --mbx-review-background --mbx-background-light --mbx-review-background-dark --mbx-review-background --mbx-background-dark --mbx-review-text-color / / --mbx-review-text-color-light --mbx-review-text-color --mbx-text-color-light --mbx-review-text-color-dark --mbx-review-text-color --mbx-text-color-dark --mbx-review-link-color / / --mbx-review-link-color-light --mbx-review-link-color #615f5f --mbx-review-link-color-dark --mbx-review-link-color white --mbx-review-github-color / / --mbx-review-github-color-light --mbx-review-github-color #615f5f --mbx-review-github-color-dark --mbx-review-github-color white"},{"location":"components/molecules/Review/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/Review/css-vars/#-mbx-review-background","title":"--mbx-review-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-review-background-light</code> and <code>--mbx-review-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-background-light","title":"--mbx-review-background-light","text":"Fallback Default --mbx-review-background --mbx-background-light <p>Review background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-background-dark","title":"--mbx-review-background-dark","text":"Fallback Default --mbx-review-background --mbx-background-dark <p>Review background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-text-color","title":"--mbx-review-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-review-text-color-light</code> and <code>--mbx-review-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-text-color-light","title":"--mbx-review-text-color-light","text":"Fallback Default --mbx-review-text-color --mbx-text-color-light <p>Review text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-text-color-dark","title":"--mbx-review-text-color-dark","text":"Fallback Default --mbx-review-text-color --mbx-text-color-dark <p>Review text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-link-color","title":"--mbx-review-link-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-review-link-color-light</code> and <code>--mbx-review-link-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-link-color-light","title":"--mbx-review-link-color-light","text":"Fallback Default --mbx-review-link-color #615f5f <p>Review link color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-link-color-dark","title":"--mbx-review-link-color-dark","text":"Fallback Default --mbx-review-link-color white <p>Review link color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-github-color","title":"--mbx-review-github-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-review-github-color-light</code> and <code>--mbx-review-github-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-github-color-light","title":"--mbx-review-github-color-light","text":"Fallback Default --mbx-review-github-color #615f5f <p>Review github icon color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/molecules/Review/css-vars/#-mbx-review-github-color-dark","title":"--mbx-review-github-color-dark","text":"Fallback Default --mbx-review-github-color white <p>Review github icon color when dark mode is <code>off</code></p> <p></p>"},{"location":"components/molecules/Review/props/","title":"Review properties","text":""},{"location":"components/molecules/Review/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/Review/props/#props-table","title":"Props table","text":"Parameter Type Default user string / description string / icon JSX.Element / url string / logo <code>default</code> | <code>link</code> | <code>facebook</code> | <code>twitter</code> | <code>google</code> | <code>linkedin</code> | <code>github</code> / max number 5 vertical boolean false rate number 0 rateType <code>star</code>|<code>circle</code> 'star'"},{"location":"components/molecules/Review/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/Review/props/#user","title":"user","text":"Type Default string / <p>Username displayed above the review description, at the right of the icon</p> <p></p> <p></p>"},{"location":"components/molecules/Review/props/#description","title":"description","text":"Type Default string / <p>Review description displayed below the review username, at the top of the rate</p> <p></p> <p></p>"},{"location":"components/molecules/Review/props/#icon","title":"icon","text":"Type Default JSX.Element / <p>Icon showed inside the component</p> <p></p> <p></p>"},{"location":"components/molecules/Review/props/#url","title":"url","text":"Type Default string / <p>Review external url. If set, an icon will be showed at the top right of the review</p> <p></p> <p></p>"},{"location":"components/molecules/Review/props/#logo","title":"logo","text":"Type Default <code>default</code> | <code>link</code> | <code>facebook</code> | <code>twitter</code> | <code>google</code> | <code>linkedin</code> | <code>github</code> / <p>Social icon type, showed at the top right of the container. Supports popular web services like Facebook, Twitter, Google and so on. Proviced icon list will grow up time by time and will be updated with the latest web services, to keep it usable for the future.</p> <p></p> <p></p>"},{"location":"components/molecules/Review/props/#max","title":"max","text":"Type Default number 5 <p>max vote (max number of icons displayed) - extended from Rater component</p> <p></p> <p></p>"},{"location":"components/molecules/Review/props/#vertical","title":"vertical","text":"Type Default boolean false <p>if <code>true</code>, rate icons will be showed vertically - extended from Rater component</p> <p></p> <p></p>"},{"location":"components/molecules/Review/props/#rate","title":"rate","text":"Type Default number 0 <p>actual vote - extended from Rater component</p> <p></p> <p></p>"},{"location":"components/molecules/Review/props/#ratetype","title":"rateType","text":"Type Default <code>star</code>|<code>circle</code> 'star' <p>vote icons type - extended from Rater component</p> <p></p>"},{"location":"components/molecules/TabViewer/","title":"TabViewer page","text":"<p>A Tab viewer component, to organize elements with tabs and show them on demand</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/TabViewer/css-vars/","title":"TabViewer CSS variables","text":""},{"location":"components/molecules/TabViewer/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/TabViewer/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-tabviewer-background / / --mbx-tabviewer-background-light --mbx-tabviewer-background linear-gradient(to right, #cccccc, #c7c7c7) --mbx-tabviewer-background-dark --mbx-tabviewer-background linear-gradient(to right, #2d3748, #1d232e) --mbx-tabviewer-text-color / / --mbx-tabviewer-text-color-light --mbx-tabviewer-text-color --mbx-text-color-light --mbx-tabviewer-text-color-dark --mbx-tabviewer-text-color --mbx-text-color-dark --mbx-tabviewer-inactive-background / / --mbx-tabviewer-inactive-background-light --mbx-tabviewer-inactive-background linear-gradient(to right, #a1a0a0, #797979) --mbx-tabviewer-inactive-background-dark --mbx-tabviewer-inactive-background linear-gradient(to right, #3e4b63, #3f4858) --mbx-tabviewer-inactive-text-color / / --mbx-tabviewer-inactive-text-color-light --mbx-tabviewer-inactive-text-color #c2c2c2 --mbx-tabviewer-inactive-text-color-dark --mbx-tabviewer-inactive-text-color #c2c2c2 --mbx-tabviewer-inactive-background-hover / / --mbx-tabviewer-inactive-background-hover-light --mbx-tabviewer-inactive-background-hover linear-gradient(to right, #b6b4b4, #999797) --mbx-tabviewer-inactive-background-hover-dark --mbx-tabviewer-inactive-background-hover linear-gradient(to right, #566888, #3c465a) --mbx-tabviewer-inactive-text-color-hover / / --mbx-tabviewer-inactive-text-color-hover-light --mbx-tabviewer-inactive-text-color-hover --mbx-text-color-hover-light --mbx-tabviewer-inactive-text-color-hover-dark --mbx-tabviewer-inactive-text-color-hover --mbx-text-color-hover-dark"},{"location":"components/molecules/TabViewer/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-background","title":"--mbx-tabviewer-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-tabviewer-background-light</code> and <code>--mbx-tabviewer-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-background-light","title":"--mbx-tabviewer-background-light","text":"Fallback Default --mbx-tabviewer-background linear-gradient(to right, #cccccc, #c7c7c7) <p>TabViewer background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-background-dark","title":"--mbx-tabviewer-background-dark","text":"Fallback Default --mbx-tabviewer-background linear-gradient(to right, #2d3748, #1d232e) <p>TabViewer background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-text-color","title":"--mbx-tabviewer-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-tabviewer-text-color-light</code> and <code>--mbx-tabviewer-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-text-color-light","title":"--mbx-tabviewer-text-color-light","text":"Fallback Default --mbx-tabviewer-text-color --mbx-text-color-light <p>TabViewer text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-text-color-dark","title":"--mbx-tabviewer-text-color-dark","text":"Fallback Default --mbx-tabviewer-text-color --mbx-text-color-dark <p>TabViewer text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-background","title":"--mbx-tabviewer-inactive-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-tabviewer-inactive-background-light</code> and <code>--mbx-tabviewer-inactive-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-background-light","title":"--mbx-tabviewer-inactive-background-light","text":"Fallback Default --mbx-tabviewer-inactive-background linear-gradient(to right, #a1a0a0, #797979) <p>TabViewer inactive tab background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-background-dark","title":"--mbx-tabviewer-inactive-background-dark","text":"Fallback Default --mbx-tabviewer-inactive-background linear-gradient(to right, #3e4b63, #3f4858) <p>TabViewer inactive tab background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-text-color","title":"--mbx-tabviewer-inactive-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-tabviewer-inactive-text-color-light</code> and <code>--mbx-tabviewer-inactive-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-text-color-light","title":"--mbx-tabviewer-inactive-text-color-light","text":"Fallback Default --mbx-tabviewer-inactive-text-color #c2c2c2 <p>TabViewer inactive tab text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-text-color-dark","title":"--mbx-tabviewer-inactive-text-color-dark","text":"Fallback Default --mbx-tabviewer-inactive-text-color #c2c2c2 <p>TabViewer inactive tab text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-background-hover","title":"--mbx-tabviewer-inactive-background-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-tabviewer-inactive-background-hover-light</code> and <code>--mbx-tabviewer-inactive-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-background-hover-light","title":"--mbx-tabviewer-inactive-background-hover-light","text":"Fallback Default --mbx-tabviewer-inactive-background-hover linear-gradient(to right, #b6b4b4, #999797) <p>TabViewer inactive tab background when dark mode is `off', on hover</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-background-hover-dark","title":"--mbx-tabviewer-inactive-background-hover-dark","text":"Fallback Default --mbx-tabviewer-inactive-background-hover linear-gradient(to right, #566888, #3c465a) <p>TabViewer inactive tab background when dark mode is `on', on hover</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-text-color-hover","title":"--mbx-tabviewer-inactive-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-tabviewer-inactive-text-color-hover-light</code> and <code>--mbx-tabviewer-inactive-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-text-color-hover-light","title":"--mbx-tabviewer-inactive-text-color-hover-light","text":"Fallback Default --mbx-tabviewer-inactive-text-color-hover --mbx-text-color-hover-light <p>TabViewer inactive tab text color when dark mode is `off', on hover</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/css-vars/#-mbx-tabviewer-inactive-text-color-hover-dark","title":"--mbx-tabviewer-inactive-text-color-hover-dark","text":"Fallback Default --mbx-tabviewer-inactive-text-color-hover --mbx-text-color-hover-dark <p>TabViewer inactive tab text color when dark mode is `on', on hover</p> <p></p>"},{"location":"components/molecules/TabViewer/props/","title":"TabViewer properties","text":""},{"location":"components/molecules/TabViewer/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/TabViewer/props/#props-table","title":"Props table","text":"Parameter Type Default selected / / tabs {<code>label</code>: string; <code>content</code>: JSX.Element;}[] / tabProps Record / tabSelectedProps Record / tabUnselectedProps Record / tabViewProps Record / tabClassName Record / tabSelectedClassName Record / tabUnselectedClassName Record / tabViewClassName Record / onChange (newValue: number) =&gt; void () =&gt; {}"},{"location":"components/molecules/TabViewer/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/TabViewer/props/#selected","title":"selected","text":"Type Default / /"},{"location":"components/molecules/TabViewer/props/#tabs","title":"tabs","text":"Type Default {<code>label</code>: string; <code>content</code>: JSX.Element;}[] / <p>tabs array. Every tab object contains 3 fields: <ul><li><code>label</code>: tab label displayed on top</li><li><code>content</code>: tab content element</li></ul></p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/props/#tabprops","title":"tabProps","text":"Type Default Record / <p>Custom props applied on every tab</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/props/#tabselectedprops","title":"tabSelectedProps","text":"Type Default Record / <p>Custom props applied on every selected tab</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/props/#tabunselectedprops","title":"tabUnselectedProps","text":"Type Default Record / <p>Custom props applied on every unselected tab</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/props/#tabviewprops","title":"tabViewProps","text":"Type Default Record / <p>Custom props applied on the tab view panel</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/props/#tabclassname","title":"tabClassName","text":"Type Default Record / <p>Custom props applied on every tab</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/props/#tabselectedclassname","title":"tabSelectedClassName","text":"Type Default Record / <p>Custom props applied on every selected tab</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/props/#tabunselectedclassname","title":"tabUnselectedClassName","text":"Type Default Record / <p>Custom props applied on every unselected tab</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/props/#tabviewclassname","title":"tabViewClassName","text":"Type Default Record / <p>Custom props applied on the tab view panel</p> <p></p> <p></p>"},{"location":"components/molecules/TabViewer/props/#onchange","title":"onChange","text":"Type Default (newValue: number) =&gt; void () =&gt; {} <p>Callback triggered when a tab is selected, giving its index as parameter</p> <p></p>"},{"location":"components/molecules/Table/","title":"Table page","text":"<p>A re-invented Table component. It follows a CSV-like format for its content.</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/molecules/Table/css-vars/","title":"Table CSS variables","text":""},{"location":"components/molecules/Table/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/molecules/Table/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-table-background / / --mbx-table-background-light --mbx-table-background --mbx-background-light --mbx-table-background-dark --mbx-table-background --mbx-background-dark --mbx-table-text-color / / --mbx-table-text-color-light --mbx-table-text-color --mbx-text-color-light --mbx-table-text-color-dark --mbx-table-text-color --mbx-text-color-dark --mbx-table-header-background / / --mbx-table-header-background-light --mbx-table-header-background linear-gradient(to right, #354155, #2b3546) --mbx-table-header-background-dark --mbx-table-header-background linear-gradient(to right, #4b5b77, #3e4c64) --mbx-table-header-text-color / / --mbx-table-header-text-color-light --mbx-table-header-text-color whitesmoke --mbx-table-header-text-color-dark --mbx-table-header-text-color rgb(255, 255, 255) --mbx-table-border-color / / --mbx-table-border-color-light --mbx-table-border-color darkslategrey --mbx-table-border-color-dark --mbx-table-border-color rgb(219, 219, 219)"},{"location":"components/molecules/Table/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/molecules/Table/css-vars/#-mbx-table-background","title":"--mbx-table-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-table-background-light</code> and <code>--mbx-table-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-background-light","title":"--mbx-table-background-light","text":"Fallback Default --mbx-table-background --mbx-background-light <p>Table background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-background-dark","title":"--mbx-table-background-dark","text":"Fallback Default --mbx-table-background --mbx-background-dark <p>Table background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-text-color","title":"--mbx-table-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-table-text-color-light</code> and <code>--mbx-table-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-text-color-light","title":"--mbx-table-text-color-light","text":"Fallback Default --mbx-table-text-color --mbx-text-color-light <p>Table text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-text-color-dark","title":"--mbx-table-text-color-dark","text":"Fallback Default --mbx-table-text-color --mbx-text-color-dark <p>Table text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-header-background","title":"--mbx-table-header-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-table-header-background-light</code> and <code>--mbx-table-header-background-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-header-background-light","title":"--mbx-table-header-background-light","text":"Fallback Default --mbx-table-header-background linear-gradient(to right, #354155, #2b3546) <p>Table header background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-header-background-dark","title":"--mbx-table-header-background-dark","text":"Fallback Default --mbx-table-header-background linear-gradient(to right, #4b5b77, #3e4c64) <p>Table header background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-header-text-color","title":"--mbx-table-header-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-table-header-text-color-light</code> and <code>--mbx-table-header-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-header-text-color-light","title":"--mbx-table-header-text-color-light","text":"Fallback Default --mbx-table-header-text-color whitesmoke <p>Table header text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-header-text-color-dark","title":"--mbx-table-header-text-color-dark","text":"Fallback Default --mbx-table-header-text-color rgb(255, 255, 255) <p>Table header text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-border-color","title":"--mbx-table-border-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-table-border-color-light</code> and <code>--mbx-table-border-color-dark</code></p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-border-color-light","title":"--mbx-table-border-color-light","text":"Fallback Default --mbx-table-border-color darkslategrey <p>Table border color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/molecules/Table/css-vars/#-mbx-table-border-color-dark","title":"--mbx-table-border-color-dark","text":"Fallback Default --mbx-table-border-color rgb(219, 219, 219) <p>Table border color when dark mode is `on'</p> <p></p>"},{"location":"components/molecules/Table/props/","title":"Table properties","text":""},{"location":"components/molecules/Table/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/molecules/Table/props/#props-table","title":"Props table","text":"Parameter Type Default headers boolean / rows (JSX.Element | string)[][] / headerClassName string / headersProps Record / cellClassName string / cellProps Record / rowClassName string / rowProps Record / onClick (row: number, column: number) =&gt; void () =&gt; {} propsCallback (row: number, column: number) =&gt; Record () =&gt; ({})"},{"location":"components/molecules/Table/props/#props-list","title":"Props list","text":""},{"location":"components/molecules/Table/props/#headers","title":"headers","text":"Type Default boolean /"},{"location":"components/molecules/Table/props/#rows","title":"rows","text":"Type Default (JSX.Element | string)[][] / <p>Table elements</p> <p></p> <p></p>"},{"location":"components/molecules/Table/props/#headerclassname","title":"headerClassName","text":"Type Default string / <p>Custom className applied on every Table header element</p> <p></p> <p></p>"},{"location":"components/molecules/Table/props/#headersprops","title":"headersProps","text":"Type Default Record / <p>Custom props applied on every Table header element</p> <p></p> <p></p>"},{"location":"components/molecules/Table/props/#cellclassname","title":"cellClassName","text":"Type Default string / <p>Custom className applied on every Table cell element</p> <p></p> <p></p>"},{"location":"components/molecules/Table/props/#cellprops","title":"cellProps","text":"Type Default Record / <p>Custom props applied on every Table cell element</p> <p></p> <p></p>"},{"location":"components/molecules/Table/props/#rowclassname","title":"rowClassName","text":"Type Default string / <p>Custom className applied on every Table row element</p> <p></p> <p></p>"},{"location":"components/molecules/Table/props/#rowprops","title":"rowProps","text":"Type Default Record / <p>Custom props applied on every Table row element</p> <p></p> <p></p>"},{"location":"components/molecules/Table/props/#onclick","title":"onClick","text":"Type Default (row: number, column: number) =&gt; void () =&gt; {} <p>Callback triggered when a Table cell is clicked</p> <p></p> <p></p>"},{"location":"components/molecules/Table/props/#propscallback","title":"propsCallback","text":"Type Default (row: number, column: number) =&gt; Record () =&gt; ({}) <p>A function to add custom props depending on Table row and column</p> <p></p>"},{"location":"components/organisms/","title":"MoBrix-ui organisms","text":""},{"location":"components/organisms/#summary","title":"Summary","text":"<ul> <li>Calendar</li> <li>DatePicker</li> <li>Drawer</li> <li>Form</li> </ul>"},{"location":"components/organisms/Calendar/","title":"Calendar page","text":"<p>A ready to use Calendar, designed to be used in many scenarios.</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/organisms/Calendar/css-vars/","title":"Calendar CSS variables","text":""},{"location":"components/organisms/Calendar/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/organisms/Calendar/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-calendar-background / / --mbx-calendar-background-light --mbx-calendar-background --mbx-background-light --mbx-calendar-background-dark --mbx-calendar-background --mbx-background-dark --mbx-calendar-text-color / / --mbx-calendar-text-color-light --mbx-calendar-text-color --mbx-text-color-light --mbx-calendar-text-color-dark --mbx-calendar-text-color --mbx-text-color-dark --mbx-calendar-selected-background / / --mbx-calendar-selected-background-light --mbx-calendar-selected-background --mbx-calendar-background-dark --mbx-calendar-selected-background-dark --mbx-calendar-selected-background --mbx-calendar-background-light --mbx-calendar-selected-text-color / / --mbx-calendar-selected-text-color-light --mbx-calendar-selected-text-color --mbx-calendar-text-color-dark --mbx-calendar-selected-text-color-dark --mbx-calendar-selected-text-color --mbx-calendar-text-color-light --mbx-calendar-background-hover / / --mbx-calendar-background-hover-light --mbx-calendar-background-hover --mbx-calendar-selected-background-light --mbx-calendar-background-hover-dark --mbx-calendar-background-hover --mbx-calendar-selected-background-dark --mbx-calendar-text-color-hover / / --mbx-calendar-text-color-hover-light --mbx-calendar-text-color-hover --mbx-calendar-selected-text-color-light --mbx-calendar-text-color-hover-dark --mbx-calendar-text-color-hover --mbx-calendar-selected-text-color-dark --mbx-calendar-arrow / / --mbx-calendar-arrow-light --mbx-calendar-arrow --mbx-calendar-text-color-light --mbx-calendar-arrow-dark --mbx-calendar-arrow --mbx-calendar-text-color-dark --mbx-calendar-arrow-hover / / --mbx-calendar-arrow-hover-light --mbx-calendar-arrow-hover --mbx-text-color-light --mbx-calendar-arrow-hover-dark --mbx-calendar-arrow-hover --mbx-text-color-dark --mbx-calendar-today-color / / --mbx-calendar-today-color-light --mbx-calendar-today-color red --mbx-calendar-today-color-dark --mbx-calendar-today-color red"},{"location":"components/organisms/Calendar/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-background","title":"--mbx-calendar-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-calendar-background-light</code> and <code>--mbx-calendar-background-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-background-light","title":"--mbx-calendar-background-light","text":"Fallback Default --mbx-calendar-background --mbx-background-light <p>Calendar background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-background-dark","title":"--mbx-calendar-background-dark","text":"Fallback Default --mbx-calendar-background --mbx-background-dark <p>Calendar background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-text-color","title":"--mbx-calendar-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-calendar-text-color-light</code> and <code>--mbx-calendar-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-text-color-light","title":"--mbx-calendar-text-color-light","text":"Fallback Default --mbx-calendar-text-color --mbx-text-color-light <p>Calendar text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-text-color-dark","title":"--mbx-calendar-text-color-dark","text":"Fallback Default --mbx-calendar-text-color --mbx-text-color-dark <p>Calendar text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-selected-background","title":"--mbx-calendar-selected-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-calendar-selected-background-light</code> and <code>--mbx-calendar-selected-background-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-selected-background-light","title":"--mbx-calendar-selected-background-light","text":"Fallback Default --mbx-calendar-selected-background --mbx-calendar-background-dark <p>Calendar selected cell background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-selected-background-dark","title":"--mbx-calendar-selected-background-dark","text":"Fallback Default --mbx-calendar-selected-background --mbx-calendar-background-light <p>Calendar selected cell background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-selected-text-color","title":"--mbx-calendar-selected-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-calendar-selected-text-color-light</code> and <code>--mbx-calendar-selected-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-selected-text-color-light","title":"--mbx-calendar-selected-text-color-light","text":"Fallback Default --mbx-calendar-selected-text-color --mbx-calendar-text-color-dark <p>Calendar selected cell text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-selected-text-color-dark","title":"--mbx-calendar-selected-text-color-dark","text":"Fallback Default --mbx-calendar-selected-text-color --mbx-calendar-text-color-light <p>Calendar selected cell text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-background-hover","title":"--mbx-calendar-background-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-calendar-background-hover-light</code> and <code>--mbx-calendar-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-background-hover-light","title":"--mbx-calendar-background-hover-light","text":"Fallback Default --mbx-calendar-background-hover --mbx-calendar-selected-background-light <p>Calendar background when dark mode is `off', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-background-hover-dark","title":"--mbx-calendar-background-hover-dark","text":"Fallback Default --mbx-calendar-background-hover --mbx-calendar-selected-background-dark <p>Calendar background when dark mode is `on', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-text-color-hover","title":"--mbx-calendar-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-calendar-text-color-hover-light</code> and <code>--mbx-calendar-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-text-color-hover-light","title":"--mbx-calendar-text-color-hover-light","text":"Fallback Default --mbx-calendar-text-color-hover --mbx-calendar-selected-text-color-light <p>Calendar text color when dark mode is `off', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-text-color-hover-dark","title":"--mbx-calendar-text-color-hover-dark","text":"Fallback Default --mbx-calendar-text-color-hover --mbx-calendar-selected-text-color-dark <p>Calendar text color when dark mode is `on', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-arrow","title":"--mbx-calendar-arrow","text":"Fallback Default / / <p>Fallback value for <code>--mbx-calendar-arrow-light</code> and <code>--mbx-calendar-arrow-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-arrow-light","title":"--mbx-calendar-arrow-light","text":"Fallback Default --mbx-calendar-arrow --mbx-calendar-text-color-light <p>Calendar arrow color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-arrow-dark","title":"--mbx-calendar-arrow-dark","text":"Fallback Default --mbx-calendar-arrow --mbx-calendar-text-color-dark <p>Calendar arrow color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-arrow-hover","title":"--mbx-calendar-arrow-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-calendar-arrow-hover-light</code> and <code>--mbx-calendar-arrow-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-arrow-hover-light","title":"--mbx-calendar-arrow-hover-light","text":"Fallback Default --mbx-calendar-arrow-hover --mbx-text-color-light <p>Calendar arrow color when dark mode is `off', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-arrow-hover-dark","title":"--mbx-calendar-arrow-hover-dark","text":"Fallback Default --mbx-calendar-arrow-hover --mbx-text-color-dark <p>Calendar arrow color when dark mode is `on', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-today-color","title":"--mbx-calendar-today-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-calendar-today-color-light</code> and <code>--mbx-calendar-today-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-today-color-light","title":"--mbx-calendar-today-color-light","text":"Fallback Default --mbx-calendar-today-color red <p>Calendar today color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/css-vars/#-mbx-calendar-today-color-dark","title":"--mbx-calendar-today-color-dark","text":"Fallback Default --mbx-calendar-today-color red <p>Calendar today color when dark mode is `on'</p> <p></p>"},{"location":"components/organisms/Calendar/props/","title":"Calendar properties","text":""},{"location":"components/organisms/Calendar/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/organisms/Calendar/props/#props-table","title":"Props table","text":"Parameter Type Default value CalendarDate Today date hideArrows boolean / days string[] English week labels months string[] English months labels onViewChange (date: CalendarDate) =&gt; void / startYear number Today year startMonth number Today month fromToday boolean true dayLabel string true labelClassName string / labelProps Record / onChange (newValue: CalendarDate) =&gt; void () =&gt; {} arrowClassName string /"},{"location":"components/organisms/Calendar/props/#props-list","title":"Props list","text":""},{"location":"components/organisms/Calendar/props/#value","title":"value","text":"Type Default CalendarDate Today date <p>Actual selected date</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#hidearrows","title":"hideArrows","text":"Type Default boolean / <p>If <code>true</code>, hide arrow buttons near the date label</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#days","title":"days","text":"Type Default string[] English week labels <p>Custom days labels</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#months","title":"months","text":"Type Default string[] English months labels <p>Custom months labels</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#onviewchange","title":"onViewChange","text":"Type Default (date: CalendarDate) =&gt; void / <p>Callback triggered when the Calendar view (the displayed month) is changed</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#startyear","title":"startYear","text":"Type Default number Today year <p>Initial displayed year</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#startmonth","title":"startMonth","text":"Type Default number Today month <p>Initial displayed month</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#fromtoday","title":"fromToday","text":"Type Default boolean true <p>If <code>false</code>, prevent the user to select a date lower than today date</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#daylabel","title":"dayLabel","text":"Type Default string true <p>Show/hide actual day label on top of the calendar</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#labelclassname","title":"labelClassName","text":"Type Default string / <p>Custom className applied on the day label component</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#labelprops","title":"labelProps","text":"Type Default Record / <p>Custom props applied on the day label component</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#onchange","title":"onChange","text":"Type Default (newValue: CalendarDate) =&gt; void () =&gt; {} <p>Callback triggered when Calendar component input value is changed by the user</p> <p></p> <p></p>"},{"location":"components/organisms/Calendar/props/#arrowclassname","title":"arrowClassName","text":"Type Default string / <p>Custom classname applied on the arrow button</p> <p></p>"},{"location":"components/organisms/DatePicker/","title":"DatePicker page","text":"<p>A smart date-picker, with an internal Calendar accessible to choose a date</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/organisms/DatePicker/css-vars/","title":"DatePicker CSS variables","text":""},{"location":"components/organisms/DatePicker/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/organisms/DatePicker/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-datepicker-background / / --mbx-datepicker-background-light --mbx-datepicker-background --mbx-background-light --mbx-datepicker-background-dark --mbx-datepicker-background --mbx-background-dark --mbx-datepicker-text-color / / --mbx-datepicker-text-color-light --mbx-datepicker-text-color --mbx-text-color-light --mbx-datepicker-text-color-dark --mbx-datepicker-text-color --mbx-text-color-dark --mbx-datepicker-icon / / --mbx-datepicker-icon-light --mbx-datepicker-icon --mbx-datepicker-text-color-light --mbx-datepicker-icon-dark --mbx-datepicker-icon --mbx-datepicker-text-color-dark --mbx-datepicker-icon-hover / / --mbx-datepicker-icon-hover-light --mbx-datepicker-icon-hover blue --mbx-datepicker-icon-hover-dark --mbx-datepicker-icon-hover orange --mbx-datepicker-calendar-background / / --mbx-datepicker-calendar-background-light --mbx-datepicker-calendar-background --mbx-calendar-background-light --mbx-datepicker-calendar-background-dark --mbx-datepicker-calendar-background --mbx-calendar-background-dark --mbx-datepicker-calendar-text-color / / --mbx-datepicker-calendar-text-color-light --mbx-datepicker-calendar-text-color --mbx-calendar-text-color-light --mbx-datepicker-calendar-text-color-dark --mbx-datepicker-calendar-text-color --mbx-calendar-text-color-dark --mbx-datepicker-calendar-background-hover / / --mbx-datepicker-calendar-background-hover-light --mbx-datepicker-calendar-background-hover --mbx-calendar-background-hover-light --mbx-datepicker-calendar-background-hover-dark --mbx-datepicker-calendar-background-hover --mbx-calendar-background-hover-dark --mbx-datepicker-calendar-text-color-hover / / --mbx-datepicker-calendar-text-color-hover-light --mbx-datepicker-calendar-text-color-hover --mbx-calendar-text-color-hover-light --mbx-datepicker-calendar-text-color-hover-dark --mbx-datepicker-calendar-text-color-hover --mbx-calendar-text-color-hover-dark --mbx-datepicker-calendar-arrow / / --mbx-datepicker-calendar-arrow-light --mbx-datepicker-calendar-arrow --mbx-calendar-arrow-light --mbx-datepicker-calendar-arrow-dark --mbx-datepicker-calendar-arrow --mbx-calendar-arrow-dark --mbx-datepicker-calendar-arrow-hover / / --mbx-datepicker-calendar-arrow-hover-light --mbx-datepicker-calendar-arrow-hover --mbx-calendar-arrow-hover-light --mbx-datepicker-calendar-arrow-hover-dark --mbx-datepicker-calendar-arrow-hover --mbx-calendar-arrow-hover-dark --mbx-datepicker-calendar-selected-background / / --mbx-datepicker-calendar-selected-background-light --mbx-datepicker-calendar-selected-background --mbx-calendar-selected-background-light --mbx-datepicker-calendar-selected-background-dark --mbx-datepicker-calendar-selected-background --mbx-calendar-selected-background-dark --mbx-datepicker-calendar-selected-text-color / / --mbx-datepicker-calendar-selected-text-color-light --mbx-datepicker-calendar-selected-text-color --mbx-calendar-selected-text-color-light --mbx-datepicker-calendar-selected-text-color-dark --mbx-datepicker-calendar-selected-text-color --mbx-calendar-selected-text-color-dark --mbx-datepicker-calendar-today-color / / --mbx-datepicker-calendar-today-color-light --mbx-datepicker-calendar-today-color --mbx-calendar-today-color-light --mbx-datepicker-calendar-today-color-dark --mbx-datepicker-calendar-today-color --mbx-calendar-today-color-dark --mbx-datepicker-modal-background / / --mbx-datepicker-modal-background-light --mbx-datepicker-modal-background --mbx-modal-background-light --mbx-datepicker-modal-background-dark --mbx-datepicker-modal-background --mbx-modal-background-dark --mbx-datepicker-modal-x-color / / --mbx-datepicker-modal-x-color-light --mbx-datepicker-modal-x-color --mbx-modal-x-color-light --mbx-datepicker-modal-x-color-dark --mbx-datepicker-modal-x-color --mbx-modal-x-color-dark --mbx-datepicker-modal-x-color-hover / / --mbx-datepicker-modal-x-color-hover-light --mbx-datepicker-modal-x-color-hover --mbx-modal-x-color-hover-light --mbx-datepicker-modal-x-color-hover-dark --mbx-datepicker-modal-x-color-hover --mbx-modal-x-color-hover-dark"},{"location":"components/organisms/DatePicker/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-background","title":"--mbx-datepicker-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-datepicker-background-light</code> and <code>--mbx-datepicker-background-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-background-light","title":"--mbx-datepicker-background-light","text":"Fallback Default --mbx-datepicker-background --mbx-background-light <p>DatePicker background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-background-dark","title":"--mbx-datepicker-background-dark","text":"Fallback Default --mbx-datepicker-background --mbx-background-dark <p>DatePicker background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-text-color","title":"--mbx-datepicker-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-datepicker-text-color-light</code> and <code>--mbx-datepicker-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-text-color-light","title":"--mbx-datepicker-text-color-light","text":"Fallback Default --mbx-datepicker-text-color --mbx-text-color-light <p>DatePicker text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-text-color-dark","title":"--mbx-datepicker-text-color-dark","text":"Fallback Default --mbx-datepicker-text-color --mbx-text-color-dark <p>DatePicker text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-icon","title":"--mbx-datepicker-icon","text":"Fallback Default / / <p>Fallback value for <code>--mbx-datepicker-icon-light</code> and <code>--mbx-datepicker-icon-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-icon-light","title":"--mbx-datepicker-icon-light","text":"Fallback Default --mbx-datepicker-icon --mbx-datepicker-text-color-light <p>DatePicker calendar icon color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-icon-dark","title":"--mbx-datepicker-icon-dark","text":"Fallback Default --mbx-datepicker-icon --mbx-datepicker-text-color-dark <p>DatePicker calendar icon color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-icon-hover","title":"--mbx-datepicker-icon-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-datepicker-icon-hover-light</code> and <code>--mbx-datepicker-icon-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-icon-hover-light","title":"--mbx-datepicker-icon-hover-light","text":"Fallback Default --mbx-datepicker-icon-hover blue <p>DatePicker calendar icon color when dark mode is `off', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-icon-hover-dark","title":"--mbx-datepicker-icon-hover-dark","text":"Fallback Default --mbx-datepicker-icon-hover orange <p>DatePicker calendar icon color when dark mode is `on', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-background","title":"--mbx-datepicker-calendar-background","text":"Fallback Default / / <p>Extended from Calendar - Fallback value for <code>--mbx-datepicker-calendar-background-light</code> and <code>--mbx-datepicker-calendar-background-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-background-light","title":"--mbx-datepicker-calendar-background-light","text":"Fallback Default --mbx-datepicker-calendar-background --mbx-calendar-background-light <p>Extended from Calendar - Calendar background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-background-dark","title":"--mbx-datepicker-calendar-background-dark","text":"Fallback Default --mbx-datepicker-calendar-background --mbx-calendar-background-dark <p>Extended from Calendar - Calendar background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-text-color","title":"--mbx-datepicker-calendar-text-color","text":"Fallback Default / / <p>Extended from Calendar - Fallback value for <code>--mbx-datepicker-calendar-text-color-light</code> and <code>--mbx-datepicker-calendar-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-text-color-light","title":"--mbx-datepicker-calendar-text-color-light","text":"Fallback Default --mbx-datepicker-calendar-text-color --mbx-calendar-text-color-light <p>Extended from Calendar - Calendar text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-text-color-dark","title":"--mbx-datepicker-calendar-text-color-dark","text":"Fallback Default --mbx-datepicker-calendar-text-color --mbx-calendar-text-color-dark <p>Extended from Calendar - Calendar text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-background-hover","title":"--mbx-datepicker-calendar-background-hover","text":"Fallback Default / / <p>Extended from Calendar - Fallback value for <code>--mbx-datepicker-calendar-background-hover-light</code> and <code>--mbx-datepicker-calendar-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-background-hover-light","title":"--mbx-datepicker-calendar-background-hover-light","text":"Fallback Default --mbx-datepicker-calendar-background-hover --mbx-calendar-background-hover-light <p>Extended from Calendar - Calendar background when dark mode is `off', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-background-hover-dark","title":"--mbx-datepicker-calendar-background-hover-dark","text":"Fallback Default --mbx-datepicker-calendar-background-hover --mbx-calendar-background-hover-dark <p>Extended from Calendar - Calendar background when dark mode is `on', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-text-color-hover","title":"--mbx-datepicker-calendar-text-color-hover","text":"Fallback Default / / <p>Extended from Calendar - Fallback value for <code>--mbx-datepicker-calendar-text-color-hover-light</code> and <code>--mbx-datepicker-calendar-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-text-color-hover-light","title":"--mbx-datepicker-calendar-text-color-hover-light","text":"Fallback Default --mbx-datepicker-calendar-text-color-hover --mbx-calendar-text-color-hover-light <p>Extended from Calendar - Calendar text color when dark mode is `off', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-text-color-hover-dark","title":"--mbx-datepicker-calendar-text-color-hover-dark","text":"Fallback Default --mbx-datepicker-calendar-text-color-hover --mbx-calendar-text-color-hover-dark <p>Extended from Calendar - Calendar text color when dark mode is `on', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-arrow","title":"--mbx-datepicker-calendar-arrow","text":"Fallback Default / / <p>Extended from Calendar - Fallback value for <code>--mbx-datepicker-calendar-arrow-light</code> and <code>--mbx-datepicker-calendar-arrow-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-arrow-light","title":"--mbx-datepicker-calendar-arrow-light","text":"Fallback Default --mbx-datepicker-calendar-arrow --mbx-calendar-arrow-light <p>Extended from Calendar - Calendar arrow color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-arrow-dark","title":"--mbx-datepicker-calendar-arrow-dark","text":"Fallback Default --mbx-datepicker-calendar-arrow --mbx-calendar-arrow-dark <p>Extended from Calendar - Calendar arrow color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-arrow-hover","title":"--mbx-datepicker-calendar-arrow-hover","text":"Fallback Default / / <p>Extended from Calendar - Fallback value for <code>--mbx-datepicker-calendar-arrow-hover-light</code> and <code>--mbx-datepicker-calendar-arrow-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-arrow-hover-light","title":"--mbx-datepicker-calendar-arrow-hover-light","text":"Fallback Default --mbx-datepicker-calendar-arrow-hover --mbx-calendar-arrow-hover-light <p>Extended from Calendar - Calendar arrow color when dark mode is `off', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-arrow-hover-dark","title":"--mbx-datepicker-calendar-arrow-hover-dark","text":"Fallback Default --mbx-datepicker-calendar-arrow-hover --mbx-calendar-arrow-hover-dark <p>Extended from Calendar - Calendar arrow color when dark mode is `on', on hover</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-selected-background","title":"--mbx-datepicker-calendar-selected-background","text":"Fallback Default / / <p>Extended from Calendar - Fallback value for <code>--mbx-datepicker-calendar-selected-background-light</code> and <code>--mbx-datepicker-calendar-selected-background-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-selected-background-light","title":"--mbx-datepicker-calendar-selected-background-light","text":"Fallback Default --mbx-datepicker-calendar-selected-background --mbx-calendar-selected-background-light <p>Extended from Calendar - Calendar selected cell background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-selected-background-dark","title":"--mbx-datepicker-calendar-selected-background-dark","text":"Fallback Default --mbx-datepicker-calendar-selected-background --mbx-calendar-selected-background-dark <p>Extended from Calendar - Calendar selected cell background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-selected-text-color","title":"--mbx-datepicker-calendar-selected-text-color","text":"Fallback Default / / <p>Extended from Calendar - Fallback value for <code>--mbx-datepicker-calendar-selected-text-color-light</code> and <code>--mbx-datepicker-calendar-selected-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-selected-text-color-light","title":"--mbx-datepicker-calendar-selected-text-color-light","text":"Fallback Default --mbx-datepicker-calendar-selected-text-color --mbx-calendar-selected-text-color-light <p>Extended from Calendar - Calendar selected cell text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-selected-text-color-dark","title":"--mbx-datepicker-calendar-selected-text-color-dark","text":"Fallback Default --mbx-datepicker-calendar-selected-text-color --mbx-calendar-selected-text-color-dark <p>Extended from Calendar - Calendar selected cell text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-today-color","title":"--mbx-datepicker-calendar-today-color","text":"Fallback Default / / <p>Extended from Calendar - Fallback value for <code>--mbx-datepicker-calendar-today-color-light</code> and <code>--mbx-datepicker-calendar-today-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-today-color-light","title":"--mbx-datepicker-calendar-today-color-light","text":"Fallback Default --mbx-datepicker-calendar-today-color --mbx-calendar-today-color-light <p>Extended from Calendar - Calendar today color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-calendar-today-color-dark","title":"--mbx-datepicker-calendar-today-color-dark","text":"Fallback Default --mbx-datepicker-calendar-today-color --mbx-calendar-today-color-dark <p>Extended from Calendar - Calendar today color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-modal-background","title":"--mbx-datepicker-modal-background","text":"Fallback Default / / <p>Extended from Modal - Fallback value for <code>--mbx-datepicker-modal-background-light</code> and <code>--mbx-datepicker-modal-background-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-modal-background-light","title":"--mbx-datepicker-modal-background-light","text":"Fallback Default --mbx-datepicker-modal-background --mbx-modal-background-light <p>Extended from Modal - Modal background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-modal-background-dark","title":"--mbx-datepicker-modal-background-dark","text":"Fallback Default --mbx-datepicker-modal-background --mbx-modal-background-dark <p>Extended from Modal - Modal background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-modal-x-color","title":"--mbx-datepicker-modal-x-color","text":"Fallback Default / / <p>Extended from Modal - Fallback value for <code>--mbx-datepicker-modal-x-color-light</code> and <code>--mbx-datepicker-modal-x-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-modal-x-color-light","title":"--mbx-datepicker-modal-x-color-light","text":"Fallback Default --mbx-datepicker-modal-x-color --mbx-modal-x-color-light <p>Extended from Modal - Modal x icon color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-modal-x-color-dark","title":"--mbx-datepicker-modal-x-color-dark","text":"Fallback Default --mbx-datepicker-modal-x-color --mbx-modal-x-color-dark <p>Extended from Modal - Modal x icon color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-modal-x-color-hover","title":"--mbx-datepicker-modal-x-color-hover","text":"Fallback Default / / <p>Extended from Modal - Fallback value for <code>--mbx-datepicker-modal-x-color-hover-light</code> and <code>--mbx-datepicker-modal-x-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-modal-x-color-hover-light","title":"--mbx-datepicker-modal-x-color-hover-light","text":"Fallback Default --mbx-datepicker-modal-x-color-hover --mbx-modal-x-color-hover-light <p>Extended from Modal - Modal x icon color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/css-vars/#-mbx-datepicker-modal-x-color-hover-dark","title":"--mbx-datepicker-modal-x-color-hover-dark","text":"Fallback Default --mbx-datepicker-modal-x-color-hover --mbx-modal-x-color-hover-dark <p>Extended from Modal - Modal x icon color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/organisms/DatePicker/props/","title":"DatePicker properties","text":""},{"location":"components/organisms/DatePicker/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/organisms/DatePicker/props/#props-table","title":"Props table","text":"Parameter Type Default value CalendarDate Today date hideArrows boolean / days string[] English week labels months string[] English months labels onViewChange (date: CalendarDate) =&gt; void / startYear number Today year startMonth number Today month fromToday boolean true dayLabel string true labelClassName string / labelProps Record / onChange (newValue: CalendarDate) =&gt; void () =&gt; {} onClose () =&gt; void () =&gt; {} arrowClassName string /"},{"location":"components/organisms/DatePicker/props/#props-list","title":"Props list","text":""},{"location":"components/organisms/DatePicker/props/#value","title":"value","text":"Type Default CalendarDate Today date <p>Actual selected date - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#hidearrows","title":"hideArrows","text":"Type Default boolean / <p>If <code>true</code>, hide arrow buttons near the date label - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#days","title":"days","text":"Type Default string[] English week labels <p>Custom days labels - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#months","title":"months","text":"Type Default string[] English months labels <p>Custom months labels - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#onviewchange","title":"onViewChange","text":"Type Default (date: CalendarDate) =&gt; void / <p>Callback triggered when the Calendar view (the displayed month) is changed - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#startyear","title":"startYear","text":"Type Default number Today year <p>Initial displayed year - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#startmonth","title":"startMonth","text":"Type Default number Today month <p>Initial displayed month - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#fromtoday","title":"fromToday","text":"Type Default boolean true <p>If <code>false</code>, prevent the user to select a date lower than today date - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#daylabel","title":"dayLabel","text":"Type Default string true <p>Show/hide actual day label on top of the calendar - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#labelclassname","title":"labelClassName","text":"Type Default string / <p>Custom className applied on the day label component - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#labelprops","title":"labelProps","text":"Type Default Record / <p>Custom props applied on the day label component - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#onchange","title":"onChange","text":"Type Default (newValue: CalendarDate) =&gt; void () =&gt; {} <p>Callback triggered when Calendar component input value is changed by the user - extended from Calendar component</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#onclose","title":"onClose","text":"Type Default () =&gt; void () =&gt; {} <p>Callback triggered when DatePicker modal is closed</p> <p></p> <p></p>"},{"location":"components/organisms/DatePicker/props/#arrowclassname","title":"arrowClassName","text":"Type Default string / <p>Custom classname applied on the arrow button - extended from Calendar component</p> <p></p>"},{"location":"components/organisms/Drawer/","title":"Drawer page","text":"<p>A modern drawer, easy to integrate and to customize</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/organisms/Drawer/css-vars/","title":"Drawer CSS variables","text":""},{"location":"components/organisms/Drawer/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/organisms/Drawer/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-drawer-background / / --mbx-drawer-background-light --mbx-drawer-background --mbx-background-light --mbx-drawer-background-dark --mbx-drawer-background --mbx-background-dark --mbx-drawer-text-color / / --mbx-drawer-text-color-light --mbx-drawer-text-color --mbx-text-color-light --mbx-drawer-text-color-dark --mbx-drawer-text-color --mbx-text-color-dark --mbx-drawer-arrow / / --mbx-drawer-arrow-light --mbx-drawer-arrow --mbx-drawer-text-color-light --mbx-drawer-arrow-dark --mbx-drawer-arrow --mbx-drawer-text-color-dark --mbx-drawer-arrow-hover / / --mbx-drawer-arrow-hover-light --mbx-drawer-arrow-hover / --mbx-drawer-arrow-hover-dark --mbx-drawer-arrow-hover /"},{"location":"components/organisms/Drawer/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-background","title":"--mbx-drawer-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-drawer-background-light</code> and <code>--mbx-drawer-background-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-background-light","title":"--mbx-drawer-background-light","text":"Fallback Default --mbx-drawer-background --mbx-background-light <p>Drawer background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-background-dark","title":"--mbx-drawer-background-dark","text":"Fallback Default --mbx-drawer-background --mbx-background-dark <p>Drawer background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-text-color","title":"--mbx-drawer-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-drawer-text-color-light</code> and <code>--mbx-drawer-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-text-color-light","title":"--mbx-drawer-text-color-light","text":"Fallback Default --mbx-drawer-text-color --mbx-text-color-light <p>Drawer text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-text-color-dark","title":"--mbx-drawer-text-color-dark","text":"Fallback Default --mbx-drawer-text-color --mbx-text-color-dark <p>Drawer text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-arrow","title":"--mbx-drawer-arrow","text":"Fallback Default / / <p>Fallback value for <code>--mbx-drawer-arrow-light</code> and <code>--mbx-drawer-arrow-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-arrow-light","title":"--mbx-drawer-arrow-light","text":"Fallback Default --mbx-drawer-arrow --mbx-drawer-text-color-light <p>Drawer arrow color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-arrow-dark","title":"--mbx-drawer-arrow-dark","text":"Fallback Default --mbx-drawer-arrow --mbx-drawer-text-color-dark <p>Drawer arrow color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-arrow-hover","title":"--mbx-drawer-arrow-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-drawer-arrow-hover-light</code> and <code>--mbx-drawer-arrow-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-arrow-hover-light","title":"--mbx-drawer-arrow-hover-light","text":"Fallback Default --mbx-drawer-arrow-hover / <p>Drawer arrow color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/css-vars/#-mbx-drawer-arrow-hover-dark","title":"--mbx-drawer-arrow-hover-dark","text":"Fallback Default --mbx-drawer-arrow-hover / <p>Drawer arrow color when dark mode is <code>on</code>, on hover</p> <p></p>"},{"location":"components/organisms/Drawer/props/","title":"Drawer properties","text":""},{"location":"components/organisms/Drawer/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/organisms/Drawer/props/#props-table","title":"Props table","text":"Parameter Type Default position <code>left</code> | <code>right</code> | <code>top</code> | <code>bottom</code> | <code>top-left</code> | <code>top-right</code> | <code>bottom-left</code> | <code>bottom-right</code> <code>left</code> onClose () =&gt; void () =&gt; {} children <code>(JSX.Element</code> | <code>string</code>) | (JSX.Element<code>&amp;#124;</code>string`)[] / closeOnClickOutside <code>boolean</code> true arrowClassName string /"},{"location":"components/organisms/Drawer/props/#props-list","title":"Props list","text":""},{"location":"components/organisms/Drawer/props/#position","title":"position","text":"Type Default <code>left</code> | <code>right</code> | <code>top</code> | <code>bottom</code> | <code>top-left</code> | <code>top-right</code> | <code>bottom-left</code> | <code>bottom-right</code> <code>left</code> <p>Drawer position, relative to the entire window</p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/props/#onclose","title":"onClose","text":"Type Default () =&gt; void () =&gt; {} <p>callback triggered when Drawer is closed</p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/props/#children","title":"children","text":"Type Default <code>(JSX.Element</code> | <code>string</code>) | (JSX.Element<code>&amp;#124;</code>string`)[] / <p>Drawer content</p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/props/#closeonclickoutside","title":"closeOnClickOutside","text":"Type Default <code>boolean</code> true <p>If <code>false</code>, the drawer won't be closed when clicking outside of it</p> <p></p> <p></p>"},{"location":"components/organisms/Drawer/props/#arrowclassname","title":"arrowClassName","text":"Type Default string / <p>Custom classname applied on the arrow button</p> <p></p>"},{"location":"components/organisms/Form/","title":"Form page","text":"<p>A totally configurable Form, with a submit button to let the user submit data from your web-app</p> <ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"components/organisms/Form/css-vars/","title":"Form CSS variables","text":""},{"location":"components/organisms/Form/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"components/organisms/Form/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-form-background-light --mbx-form-background --mbx-background-light --mbx-form-background / / --mbx-form-background-dark --mbx-form-background --mbx-background-dark --mbx-form-text-color / / --mbx-form-text-color-light --mbx-form-text-color --mbx-text-color-light --mbx-form-text-color-dark --mbx-form-text-color --mbx-text-color-dark --mbx-form-submit-background / / --mbx-form-submit-background-light --mbx-form-submit-background mbx-button-background-light --mbx-form-submit-background-dark --mbx-form-submit-background mbx-button-background-dark --mbx-form-submit-text-color / / --mbx-form-submit-text-color-light --mbx-form-submit-text-color mbx-button-text-color-light --mbx-form-submit-text-color-dark --mbx-form-submit-text-color mbx-button-text-color-dark --mbx-form-formfield-background / / --mbx-form-formfield-background-dark --mbx-form-formfield-background --mbx-formfield-background-dark --mbx-form-formfield-background-light --mbx-form-formfield-background --mbx-formfield-background-light --mbx-form-formfield-text-color / / --mbx-form-formfield-text-color-light --mbx-form-formfield-text-color --mbx-formfield-text-color-light --mbx-form-formfield-text-color-dark --mbx-form-formfield-text-color --mbx-formfield-text-color-dark --mbx-form-formfield-background-hover / / --mbx-form-formfield-background-hover-light --mbx-form-formfield-background-hover --mbx-formfield-background-hover-light --mbx-form-formfield-background-hover-dark --mbx-form-formfield-background-hover --mbx-formfield-background-hover-dark --mbx-form-formfield-text-color-hover / / --mbx-form-formfield-text-color-hover-light --mbx-form-formfield-text-color-hover --mbx-formfield-text-color-hover-light --mbx-form-formfield-text-color-hover-dark --mbx-form-formfield-text-color-hover --mbx-formfield-text-color-hover-dark --mbx-form-formfield-error-border / / --mbx-form-formfield-error-border-light --mbx-form-formfield-error-border --mbx-formfield-error-border-light --mbx-form-formfield-error-border-dark --mbx-form-formfield-error-border --mbx-formfield-error-border-dark --mbx-form-formfield-error-text / / --mbx-form-formfield-error-text-light --mbx-form-formfield-error-text --mbx-formfield-error-text-light --mbx-form-formfield-error-text-dark --mbx-form-formfield-error-text --mbx-formfield-error-text-dark"},{"location":"components/organisms/Form/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"components/organisms/Form/css-vars/#-mbx-form-background-light","title":"--mbx-form-background-light","text":"Fallback Default --mbx-form-background --mbx-background-light <p>Form background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-background","title":"--mbx-form-background","text":"Fallback Default / / <p>Fallback value for <code>and</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-background-dark","title":"--mbx-form-background-dark","text":"Fallback Default --mbx-form-background --mbx-background-dark <p>Form background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-text-color","title":"--mbx-form-text-color","text":"Fallback Default / / <p>Fallback value for <code>and</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-text-color-light","title":"--mbx-form-text-color-light","text":"Fallback Default --mbx-form-text-color --mbx-text-color-light <p>Form text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-text-color-dark","title":"--mbx-form-text-color-dark","text":"Fallback Default --mbx-form-text-color --mbx-text-color-dark <p>Form text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-submit-background","title":"--mbx-form-submit-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-form-submit-background-light</code> and <code>--mbx-form-submit-background-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-submit-background-light","title":"--mbx-form-submit-background-light","text":"Fallback Default --mbx-form-submit-background mbx-button-background-light <p>Form submit button background when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-submit-background-dark","title":"--mbx-form-submit-background-dark","text":"Fallback Default --mbx-form-submit-background mbx-button-background-dark <p>Form submit button background when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-submit-text-color","title":"--mbx-form-submit-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-form-submit-text-color-light</code> and <code>--mbx-form-submit-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-submit-text-color-light","title":"--mbx-form-submit-text-color-light","text":"Fallback Default --mbx-form-submit-text-color mbx-button-text-color-light <p>Form submit button text color when dark mode is `off'</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-submit-text-color-dark","title":"--mbx-form-submit-text-color-dark","text":"Fallback Default --mbx-form-submit-text-color mbx-button-text-color-dark <p>Form submit button text color when dark mode is `on'</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-background","title":"--mbx-form-formfield-background","text":"Fallback Default / / <p>Extended from FormField - Fallback value for <code>--mbx-form-formfield-background-light</code> and <code>--mbx-form-formfield-background-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-background-dark","title":"--mbx-form-formfield-background-dark","text":"Fallback Default --mbx-form-formfield-background --mbx-formfield-background-dark <p>Extended from FormField - FormField background when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-background-light","title":"--mbx-form-formfield-background-light","text":"Fallback Default --mbx-form-formfield-background --mbx-formfield-background-light <p>Extended from FormField - FormField background when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-text-color","title":"--mbx-form-formfield-text-color","text":"Fallback Default / / <p>Extended from FormField - Fallback value for <code>--mbx-form-formfield-text-color-light</code> and <code>--mbx-form-formfield-text-color-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-text-color-light","title":"--mbx-form-formfield-text-color-light","text":"Fallback Default --mbx-form-formfield-text-color --mbx-formfield-text-color-light <p>Extended from FormField - FormField text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-text-color-dark","title":"--mbx-form-formfield-text-color-dark","text":"Fallback Default --mbx-form-formfield-text-color --mbx-formfield-text-color-dark <p>Extended from FormField - FormField text color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-background-hover","title":"--mbx-form-formfield-background-hover","text":"Fallback Default / / <p>Extended from FormField - Fallback value for <code>--mbx-form-formfield-background-hover-light</code> and <code>--mbx-form-formfield-background-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-background-hover-light","title":"--mbx-form-formfield-background-hover-light","text":"Fallback Default --mbx-form-formfield-background-hover --mbx-formfield-background-hover-light <p>Extended from FormField - FormField background when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-background-hover-dark","title":"--mbx-form-formfield-background-hover-dark","text":"Fallback Default --mbx-form-formfield-background-hover --mbx-formfield-background-hover-dark <p>Extended from FormField - FormField background when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-text-color-hover","title":"--mbx-form-formfield-text-color-hover","text":"Fallback Default / / <p>Extended from FormField - Fallback value for <code>--mbx-form-formfield-text-color-hover-light</code> and <code>--mbx-form-formfield-text-color-hover-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-text-color-hover-light","title":"--mbx-form-formfield-text-color-hover-light","text":"Fallback Default --mbx-form-formfield-text-color-hover --mbx-formfield-text-color-hover-light <p>Extended from FormField - FormField text color when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-text-color-hover-dark","title":"--mbx-form-formfield-text-color-hover-dark","text":"Fallback Default --mbx-form-formfield-text-color-hover --mbx-formfield-text-color-hover-dark <p>Extended from FormField - FormField text color when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-error-border","title":"--mbx-form-formfield-error-border","text":"Fallback Default / / <p>Extended from FormField - Fallback value for <code>--mbx-form-formfield-error-border-light</code> and <code>--mbx-form-formfield-error-border-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-error-border-light","title":"--mbx-form-formfield-error-border-light","text":"Fallback Default --mbx-form-formfield-error-border --mbx-formfield-error-border-light <p>Extended from FormField - FormField error box border color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-error-border-dark","title":"--mbx-form-formfield-error-border-dark","text":"Fallback Default --mbx-form-formfield-error-border --mbx-formfield-error-border-dark <p>Extended from FormField - FormField error box border color when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-error-text","title":"--mbx-form-formfield-error-text","text":"Fallback Default / / <p>Extended from FormField - Fallback value for <code>--mbx-form-formfield-error-text-light</code> and <code>--mbx-form-formfield-error-text-dark</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-error-text-light","title":"--mbx-form-formfield-error-text-light","text":"Fallback Default --mbx-form-formfield-error-text --mbx-formfield-error-text-light <p>Extended from FormField - FormField error box text color when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"components/organisms/Form/css-vars/#-mbx-form-formfield-error-text-dark","title":"--mbx-form-formfield-error-text-dark","text":"Fallback Default --mbx-form-formfield-error-text --mbx-formfield-error-text-dark <p>Extended from FormField - FormField error box text color when dark mode is <code>on</code></p> <p></p>"},{"location":"components/organisms/Form/props/","title":"Form properties","text":""},{"location":"components/organisms/Form/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"components/organisms/Form/props/#props-table","title":"Props table","text":"Parameter Type Default title string / fields Record {} onSubmit (values: Record) =&gt; void / submitLabel <code>string</code> | <code>JSX.Element</code> / fieldClassName string / children JSX.Element /"},{"location":"components/organisms/Form/props/#props-list","title":"Props list","text":""},{"location":"components/organisms/Form/props/#title","title":"title","text":"Type Default string / <p>Form title</p> <p></p> <p></p>"},{"location":"components/organisms/Form/props/#fields","title":"fields","text":"Type Default Record {} <p>Form fields object. Every key is the field unique ID, and will be used on submit when returning their values</p> <p></p> <p></p>"},{"location":"components/organisms/Form/props/#onsubmit","title":"onSubmit","text":"Type Default (values: Record) =&gt; void / <p>Custom callback triggered when clicking on submit button. Gives the fields values as input parameter</p> <p></p> <p></p>"},{"location":"components/organisms/Form/props/#submitlabel","title":"submitLabel","text":"Type Default <code>string</code> | <code>JSX.Element</code> / <p>Custom submit button label</p> <p></p> <p></p>"},{"location":"components/organisms/Form/props/#fieldclassname","title":"fieldClassName","text":"Type Default string / <p>Custom classname applied on every field</p> <p></p> <p></p>"},{"location":"components/organisms/Form/props/#children","title":"children","text":"Type Default JSX.Element / <p>Form content</p> <p></p>"},{"location":"old-guides/","title":"Old guides","text":"<ul> <li>MoBrix-ui v1.X.X</li> <li>MoBrix-ui v2.X.X</li> </ul>"},{"location":"old-guides/README_v1/","title":"MoBrix-ui - V1 guide","text":"<p>React components for every app, easy to use and customize</p> <p></p>"},{"location":"old-guides/README_v1/#summary","title":"Summary","text":"<ul> <li>MoBrix-ui philosophy</li> <li>Components building process</li> <li>Shared components properties</li> <li>Customizable UI</li> <li>Box components</li> <li>Getting started</li> <li>Installation</li> <li>Usage</li> <li>Tests</li> <li>Authors</li> <li>License</li> </ul>"},{"location":"old-guides/README_v1/#mobrix-ui-philosophy","title":"mobrix-ui philosophy","text":"<p>This library is built upon few (but important) concepts:</p> <ul> <li>Small library size, to not impact on final app bundle size</li> <li>Few dependencies, to not introduce a bunch of additional packages (that could also introduce bugs or version conflicts with pre-existent packages)</li> <li>Let the user customize every part as desired, but with default values set otherwise, to make every component ready to be used without so many parameters</li> <li>Every component should be integrable into every react app, so their behaviour must be customizable too (with callbacks, for example)</li> </ul> <p>The same concepts are also the base of another project I maintain, MoBrix-engine (check it out, it is also the base of MoBrix-ui guide page !)</p> <p></p>"},{"location":"old-guides/README_v1/#components-building-process","title":"Components building process","text":"<p>This library use a standardized process to build every component. As result, every component has a shared initial logic, shared CSS styles and shared properties.</p> <p></p>"},{"location":"old-guides/README_v1/#shared-components-properties","title":"Shared components properties","text":"<p>Some properties are shared between all components, for a smoother dev experience. In addition, this makes every single component easily re-usable. Let's see them in details:</p> Property Description <code>className</code> custom className applied on main container <code>dark</code> Enable/disable dark mode <code>hide</code> Hide/show component <code>id</code> <code>data-id</code> parameter (for testing purpose, to easily find the component into the DOM) <code>shadow</code> Enable/disable shadow behind component <code>style</code> Css inline properties applied on main container <code>unstyled</code> If <code>true</code>, no standard mobrix-ui styles will be applied on the components (useful for example, with image buttons) <p>With these shared properties is possible to drive every component behaviour and UI with an external state management system</p> <p></p>"},{"location":"old-guides/README_v1/#customizable-ui","title":"Customizable UI","text":"<p>MoBrix-ui-components components UI is globally configurable, with CSS variables. By defining some specific custom CSS variables into your app css, you'll change the UI of all components:</p> CSS variable Description Default value Related CSS attribute <code>--mobrix-ui-custom-background-dark</code> Components background, when in dark-mode (dark is set to true). <code>linear-gradient(to right, #2d3748, #1d232e)</code> <code>background-image</code> <code>--mobrix-ui-custom-background-color-dark</code> Components background color, when in dark-mode (dark is set to true). <code>#1d232e</code> <code>background-color</code> <code>--mobrix-ui-custom-text-color-dark</code> Components text color, when in dark-mode (dark is set to true). <code>white</code> <code>text-color</code> <code>--mobrix-ui-custom-background-light</code> Components background, when not in dark-mode (dark is set to false). <code>linear-gradient(to right, #fff, #eaebec)</code> <code>background-image</code> <code>--mobrix-ui-custom-background-color-light</code> Components background color, when not in dark-mode (dark is set to false). <code>#f5f5f5</code> <code>background-color</code> <code>--mobrix-ui-custom-text-color-light</code> Components text color, when not in dark-mode (dark is set to false). <code>#1b1b1b</code> <code>text-color</code> <p>If you don't set these variables, the default values will be used.</p> <p></p>"},{"location":"old-guides/README_v1/#box-components","title":"Box components","text":"<p>Some components are designed with a specific structure, to better control and customize their look and feel. This type of components is called <code>Box Component</code>, for their particular structure. In addition to the shared properties, as they are part of MoBrix-ui, they accept 3 additional (and optional) properties:</p> <ul> <li><code>label</code>, a string or a component rendered above the final component</li> <li><code>value</code>, a specific property that drive the component UI, its type vary depends on component itself (for example, for the CheckBox component, it is the check status, as a <code>boolean</code> )</li> <li><code>defaultValue</code>, the default value to use when <code>value</code> is not given or is <code>undefined</code></li> </ul> <p></p>"},{"location":"old-guides/README_v1/#getting-started","title":"Getting started","text":""},{"location":"old-guides/README_v1/#installation","title":"Installation","text":"<p>If you want to use this library inside your project, just install it:</p> <pre><code>\nnpm i mobrix-ui\n\n</code></pre>"},{"location":"old-guides/README_v1/#usage","title":"Usage","text":"<p>After installation, you can use every <code>MoBrix-ui</code> component in your app. Run this example to see them in action:</p> <pre><code>import { Card, Container, Link } from \"mobrix-ui\";\nimport { render } from \"react-dom\";\n\nrender(\n  &lt;Container animated&gt;\n    &lt;Card\n      dark={true}\n      body={&lt;p&gt;This page is entirely made with MoBrix-ui components !&lt;/p&gt;}\n      footer={\n        &lt;Link to=\"https://cianciarusocataldo.github.io/mobrix-ui\"&gt;\n          MoBrix-ui page\n        &lt;/Link&gt;\n      }\n    /&gt;\n  &lt;/Container&gt;,\n  document.getElementById(\"root\"),\n);\n</code></pre> <p></p> <p></p> <p>If you want to customize the UI globally, initialize the dedicated CSS variables:</p> <pre><code>* {\n  --mobrix-ui-text-color: #f5f5f5;\n  --mobrix-ui-background-color: #1b1b1b;\n}\n</code></pre>"},{"location":"old-guides/README_v1/#tests","title":"Tests","text":"<p>Unit tests for every component are located inside <code>tests</code> folder. The test script is executed with pre-defined test command:</p> <pre><code>npm run test\n</code></pre> <p></p>"},{"location":"old-guides/README_v1/#authors","title":"Authors","text":"<ul> <li>Cataldo Cianciaruso</li> </ul>"},{"location":"old-guides/README_v1/#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details</p>"},{"location":"old-guides/README_v2/","title":"MoBrix-ui - V2 guide","text":"<p>React components for every app, easy to use and customize.</p> <p></p>"},{"location":"old-guides/README_v2/#note-for-mobrix-ui-v1-user","title":"Note for MoBrix-ui v1 user","text":"<p>MoBrix-ui v2 introduces some breaking changes that makes it not compatible with older MoBrix verions (using different lib versions in parallel is possible, but can cause some unexpected errors). If you are using MoBrix 1.X.X, please read the dedicated guide, or upgrade it to v2.X.X!</p> <p></p>"},{"location":"old-guides/README_v2/#summary","title":"Summary","text":"<ul> <li>MoBrix-ui philosophy</li> <li>Components building process</li> <li>UI properties</li> <li>Accessibility properties</li> <li>CSS variables</li> <li>Reactive components</li> <li>Getting started</li> <li>Installation</li> <li>Usage</li> <li>Tests</li> <li>Authors</li> <li>License</li> </ul>"},{"location":"old-guides/README_v2/#mobrix-ui-philosophy","title":"MoBrix-ui philosophy","text":"<p>This library is built upon few (but important) concepts:</p> <ul> <li>Small library size, to not impact on final app bundle size</li> <li>Few dependencies, to not introduce a bunch of additional packages (that could also introduce bugs or version conflicts with pre-existent packages)</li> <li>Let the user customize every part as desired, but with default values set otherwise, to make every component ready to be used without so many parameters</li> <li>Every component should be integrable into every react app, so their behaviour must be customizable too (with callbacks, for example)</li> </ul> <p>The same concepts are also the base of another project I maintain, MoBrix-engine (check it out, it is also the base of MoBrix-ui guide page !)</p> <p></p>"},{"location":"old-guides/README_v2/#components-building-process","title":"Components building process","text":"<p>This library use a standardized process to build every component. As result, every component has a shared initial logic, shared CSS styles and shared properties. Some properties are shared between all components, for a smoother dev experience. In addition, this makes every single component easily re-usable.</p> <p></p>"},{"location":"old-guides/README_v2/#ui-properties","title":"UI properties","text":"Property Type Description Default value <code>className</code> <code>string</code> custom className applied on main container <code>\"\"</code> <code>dark</code> <code>boolean</code> Enable/disable dark mode <code>false</code> <code>hide</code> <code>boolean</code> Hide/show component <code>false</code> <code>id</code> <code>string</code> <code>data-id</code> parameter (for testing purpose, to easily find the component into the DOM) <code>/</code> <code>shadow</code> <code>boolean</code> Enable/disable shadow behind component <code>false</code> <code>style</code> <code>Record&lt;string,any&gt;</code> Css inline properties applied on main container <code>/</code> <code>unstyled</code> <code>boolean</code> If <code>true</code>, no standard mobrix-ui styles will be applied on the components (useful for example, with image buttons) <code>false</code> <code>animated</code> <code>boolean</code> Enable/disable component animations <code>false</code>"},{"location":"old-guides/README_v2/#accessibility-properties","title":"Accessibility properties","text":"<p>Some accessibility properties are shared between all components, for a better and smoother user experience, in any scenario:</p> Property Type Description Default value <code>onFocus</code> ( ) =&gt; <code>void</code> custom callback triggered when the component get the focus (for example, through tab key) <code>/</code> <code>onFocusLost</code> ( ) =&gt; <code>void</code> custom callback triggered when the component lose the focus (for example, when user clicks outside it) <code>/</code> <code>a11y</code> <code>boolean</code> Enable/disable accessibility features. <code>true</code> <code>a11yLabel</code> <code>string</code> If <code>a11y</code> = <code>true</code>, is used as aria-label accessibility parameter <code>/</code> <code>a11yDark</code> <code>boolean</code> If <code>a11y</code> = <code>true</code>, enable/disable dark mode for a11y styles. If not set, will be used the <code>dark</code> UI parameter same as <code>dark</code> or <code>false</code> <code>onKeyDown</code> (keyEvent : <code>any</code>) =&gt; <code>void</code> custom callback triggered when a key is pressed while using the component (for example, when writing text inside an <code>Input</code> component). <code>/</code> <p></p>"},{"location":"old-guides/README_v2/#css-variables","title":"CSS variables","text":"<p>MoBrix-ui is globally configurable, with CSS variables. By defining some specific custom CSS variables into your app css, you'll change the UI of all components:</p> CSS variable Description Default value Related CSS attribute <code>--mobrix-ui-custom-background-dark</code> Components background, when in dark-mode (dark is set to true). <code>linear-gradient(to right, #2d3748, #1d232e)</code> <code>background-image</code> <code>--mobrix-ui-custom-background-color-dark</code> Components background color, when in dark-mode (dark is set to true). <code>#1d232e</code> <code>background-color</code> <code>--mobrix-ui-custom-text-color-dark</code> Components text color, when in dark-mode (dark is set to true). <code>white</code> <code>text-color</code> <code>--mobrix-ui-custom-background-light</code> Components background, when not in dark-mode (dark is set to false). <code>linear-gradient(to right, #fff, #eaebec)</code> <code>background-image</code> <code>--mobrix-ui-custom-background-color-light</code> Components background color, when not in dark-mode (dark is set to false). <code>#f5f5f5</code> <code>background-color</code> <code>--mobrix-ui-custom-text-color-light</code> Components text color, when not in dark-mode (dark is set to false). <code>#1b1b1b</code> <code>text-color</code> <code>--mobrix-ui-custom-focus-color-light</code> If <code>a11yDark</code> = <code>false</code> , this color is used to update UI when a component is focused (with a screen reader or by navigating with the <code>Tab</code> key) <code>#7785ff</code> <code>box-shadow</code> / <code>color</code> <code>--mobrix-ui-custom-focus-color-dark</code> If <code>a11yDark</code> = <code>true</code> , this color is used to update UI when a component is focused (with a screen reader or by navigating with the <code>Tab</code> key) <code>#fb7a10</code> <code>box-shadow</code> / <code>color</code> <p></p>"},{"location":"old-guides/README_v2/#reactive-components","title":"Reactive components","text":"<p>Some components are designed with a specific structure, to sync their internal state with an external input value. This kind of component handle internally their actual value, using the <code>value</code> parameter as starting point. This let the component to be driven in 2 different way:</p> <ul> <li> <p>Internally, Its internal <code>value</code>, when using the component without changing its value parameter from code</p> </li> <li> <p>External, passing the <code>value</code> parameter</p> </li> </ul> <p>So, we have 2 scenarios:</p> <ul> <li> <p>If you change the component value   using the component(without changing the <code>value</code> parameter), it will be updated internally.</p> </li> <li> <p>If you change the passed <code>value</code> parameter, the component will sync its value with the given one.</p> </li> </ul> <p>A clear example is the Input component. When changing the <code>value</code> parameter, the component will sync its actual value.</p> <p></p> <p></p>"},{"location":"old-guides/README_v2/#getting-started","title":"Getting started","text":""},{"location":"old-guides/README_v2/#installation","title":"Installation","text":"<p>If you want to use this library inside your project, just install it:</p> <pre><code>\nnpm i mobrix-ui\n\n</code></pre> <p></p>"},{"location":"old-guides/README_v2/#usage","title":"Usage","text":"<p>After installation, you can use every <code>MoBrix-ui</code> component in your app. Run this example to see them in action:</p> <pre><code>import { Card, Container, Link } from \"mobrix-ui\";\nimport { render } from \"react-dom\";\n\nrender(\n  &lt;Container animated&gt;\n    &lt;Card\n      dark={true}\n      body={&lt;p&gt;This page is entirely made with MoBrix-ui components !&lt;/p&gt;}\n      footer={\n        &lt;Link to=\"https://cianciarusocataldo.github.io/mobrix-ui\"&gt;\n          MoBrix-ui page\n        &lt;/Link&gt;\n      }\n    /&gt;\n  &lt;/Container&gt;,\n  document.getElementById(\"root\"),\n);\n</code></pre> <p></p> <p></p> <p>If you want to customize the UI globally, initialize the dedicated CSS variables:</p> <pre><code>* {\n  --mobrix-ui-text-color: #f5f5f5;\n  --mobrix-ui-background-color: #1b1b1b;\n}\n</code></pre> <p></p>"},{"location":"old-guides/README_v2/#tests","title":"Tests","text":"<p>Unit tests for every component are located inside <code>tests</code> folder. The test script is executed with pre-defined test command:</p> <pre><code>npm run test\n</code></pre> <p></p>"},{"location":"old-guides/README_v2/#authors","title":"Authors","text":"<ul> <li>Cataldo Cianciaruso</li> </ul>"},{"location":"old-guides/README_v2/#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details</p>"},{"location":"shared/","title":"MoBrix-ui shared page","text":"<ul> <li>Properties</li> <li>Css Variables</li> </ul>"},{"location":"shared/css-vars/","title":"MoBrix-ui shared CSS variables","text":""},{"location":"shared/css-vars/#summary","title":"Summary","text":"<ul> <li>CSS Variables table</li> <li>CSS Variables list</li> </ul>"},{"location":"shared/css-vars/#css-variables-table","title":"CSS Variables table","text":"Css variable Fallback Default --mbx-background / / --mbx-background-light --mbx-background linear-gradient(to right, #fff, #ededee, #e6e7e7) --mbx-background-dark --mbx-background linear-gradient(to right, #2d3748, #1d232e) --mbx-background-color / / --mbx-background-color-light --mbx-background-color #e9e9e9 --mbx-background-color-dark --mbx-background-color #1d232e --mbx-background-color-hover / / --mbx-background-color-hover-light --mbx-background-color-hover #dfeaf8 --mbx-background-color-hover-dark --mbx-background-color-hover #3a3552 --mbx-background-hover / / --mbx-background-hover-light --mbx-background-hover linear-gradient(to right, #ececec, #e1e1e6, #dbdddd) --mbx-background-hover-dark --mbx-background-hover linear-gradient(to right, #364257, #252d3b) --mbx-text-color / / --mbx-text-color-light --mbx-text-color #1b1b1b --mbx-text-color-dark --mbx-text-color white --mbx-text-color-hover / / --mbx-text-color-hover-light --mbx-text-color-hover #413c5c --mbx-text-color-hover-dark --mbx-text-color-hover #dfeaf8 --mbx-shadow / / --mbx-shadow-light --mbx-shadow #464545 --mbx-shadow-dark --mbx-shadow #464545 --mbx-focus-color / / --mbx-focus-color-light --mbx-focus-color #7785ff --mbx-focus-color-dark --mbx-focus-color #fb7a10"},{"location":"shared/css-vars/#css-variables-list","title":"CSS Variables list","text":""},{"location":"shared/css-vars/#-mbx-background","title":"--mbx-background","text":"Fallback Default / / <p>Fallback value for <code>--mbx-background-light</code> and <code>--mbx-background-dark</code> variables</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-light","title":"--mbx-background-light","text":"Fallback Default --mbx-background linear-gradient(to right, #fff, #ededee, #e6e7e7) <p>Global MoBrix-ui background, when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-dark","title":"--mbx-background-dark","text":"Fallback Default --mbx-background linear-gradient(to right, #2d3748, #1d232e) <p>Global MoBrix-ui background, when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-color","title":"--mbx-background-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-background-color-light</code> and <code>--mbx-background-color-dark</code> variables</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-color-light","title":"--mbx-background-color-light","text":"Fallback Default --mbx-background-color #e9e9e9 <p>Global MoBrix-ui background color, when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-color-dark","title":"--mbx-background-color-dark","text":"Fallback Default --mbx-background-color #1d232e <p>Global MoBrix-ui background color, when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-color-hover","title":"--mbx-background-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-background-color-hover-light</code> and <code>--mbx-background-color-hover-dark</code> variables</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-color-hover-light","title":"--mbx-background-color-hover-light","text":"Fallback Default --mbx-background-color-hover #dfeaf8 <p>Global MoBrix-ui background color, when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-color-hover-dark","title":"--mbx-background-color-hover-dark","text":"Fallback Default --mbx-background-color-hover #3a3552 <p>Global MoBrix-ui background color, when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-hover","title":"--mbx-background-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-background-hover-light</code> and <code>--mbx-background-hover-dark</code> variables</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-hover-light","title":"--mbx-background-hover-light","text":"Fallback Default --mbx-background-hover linear-gradient(to right, #ececec, #e1e1e6, #dbdddd) <p>Global MoBrix-ui background, when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-background-hover-dark","title":"--mbx-background-hover-dark","text":"Fallback Default --mbx-background-hover linear-gradient(to right, #364257, #252d3b) <p>Global MoBrix-ui background, when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-text-color","title":"--mbx-text-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-text-color-light</code> and <code>--mbx-text-color-dark</code> variables</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-text-color-light","title":"--mbx-text-color-light","text":"Fallback Default --mbx-text-color #1b1b1b <p>Global MoBrix-ui text color, when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-text-color-dark","title":"--mbx-text-color-dark","text":"Fallback Default --mbx-text-color white <p>Global MoBrix-ui text color, when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-text-color-hover","title":"--mbx-text-color-hover","text":"Fallback Default / / <p>Fallback value for <code>--mbx-text-color-hover-light</code> and <code>--mbx-text-color-hover-dark</code> variables</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-text-color-hover-light","title":"--mbx-text-color-hover-light","text":"Fallback Default --mbx-text-color-hover #413c5c <p>Global MoBrix-ui text color, when dark mode is <code>off</code>, on hover</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-text-color-hover-dark","title":"--mbx-text-color-hover-dark","text":"Fallback Default --mbx-text-color-hover #dfeaf8 <p>Global MoBrix-ui text color, when dark mode is <code>on</code>, on hover</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-shadow","title":"--mbx-shadow","text":"Fallback Default / / <p>Fallback value for <code>--mbx-shadow-light</code> and <code>--mbx-shadow-dark</code> variables</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-shadow-light","title":"--mbx-shadow-light","text":"Fallback Default --mbx-shadow #464545 <p>Global MoBrix-ui shadow color, when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-shadow-dark","title":"--mbx-shadow-dark","text":"Fallback Default --mbx-shadow #464545 <p>Global MoBrix-ui shadow color, when dark mode is <code>on</code></p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-focus-color","title":"--mbx-focus-color","text":"Fallback Default / / <p>Fallback value for <code>--mbx-focus-color-light</code> and <code>--mbx-focus-color-dark</code> variables</p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-focus-color-light","title":"--mbx-focus-color-light","text":"Fallback Default --mbx-focus-color #7785ff <p>Global MoBrix-ui focus color, when dark mode is <code>off</code></p> <p></p> <p></p>"},{"location":"shared/css-vars/#-mbx-focus-color-dark","title":"--mbx-focus-color-dark","text":"Fallback Default --mbx-focus-color #fb7a10 <p>Global MoBrix-ui focus color, when dark mode is <code>on</code></p> <p></p>"},{"location":"shared/props/","title":"MoBrix-ui shared properties","text":""},{"location":"shared/props/#summary","title":"Summary","text":"<ul> <li>Props table</li> <li>Props list</li> </ul>"},{"location":"shared/props/#props-table","title":"Props table","text":"Parameter Type Default key string / className string / dark boolean false hide boolean false id string / shadow boolean true style CSSProperties / unstyled boolean false animated boolean true animation <code>fade-in</code> | <code>slide-in-left</code> | <code>slide-in-right</code> | <code>slide-in-top</code> | <code>shake</code> / background boolean true hover boolean true disabled boolean false onKeyDown (keyEvent : any) =&gt; void / onFocus () =&gt; void / onFocusLost () =&gt; void / additionalProps Record / a11y boolean true a11yLabel string / tabIndex number | string /"},{"location":"shared/props/#props-list","title":"Props list","text":""},{"location":"shared/props/#key","title":"key","text":"Type Default string / <p>React key, the standard key parameter</p> <p></p> <p></p>"},{"location":"shared/props/#classname","title":"className","text":"Type Default string / <p>custom className applied on main container</p> <p></p> <p></p>"},{"location":"shared/props/#dark","title":"dark","text":"Type Default boolean false <p>Enable/disable dark mode</p> <p></p> <p></p>"},{"location":"shared/props/#hide","title":"hide","text":"Type Default boolean false <p>Hide/show component</p> <p></p> <p></p>"},{"location":"shared/props/#id","title":"id","text":"Type Default string / <p>id parameter (for styling/testing purpose, to easily find the component into the DOM)</p> <p></p> <p></p>"},{"location":"shared/props/#shadow","title":"shadow","text":"Type Default boolean true <p>Enable/disable shadow behind component</p> <p></p> <p></p>"},{"location":"shared/props/#style","title":"style","text":"Type Default CSSProperties / <p>Css inline properties applied on main container</p> <p></p> <p></p>"},{"location":"shared/props/#unstyled","title":"unstyled","text":"Type Default boolean false <p>If <code>true</code>, no standard MoBrix-ui styles will be applied on the components (useful for example, with image buttons)</p> <p></p> <p></p>"},{"location":"shared/props/#animated","title":"animated","text":"Type Default boolean true <p>Enable/disable component animations</p> <p></p> <p></p>"},{"location":"shared/props/#animation","title":"animation","text":"Type Default <code>fade-in</code> | <code>slide-in-left</code> | <code>slide-in-right</code> | <code>slide-in-top</code> | <code>shake</code> / <p>If <code>animated</code>=<code>true</code>, this parameter specifies which animation is used when component is rendered</p> <p></p> <p></p>"},{"location":"shared/props/#background","title":"background","text":"Type Default boolean true <p>Enable/disable component background</p> <p></p> <p></p>"},{"location":"shared/props/#hover","title":"hover","text":"Type Default boolean true <p>Enable/disable component hover standard styles</p> <p></p> <p></p>"},{"location":"shared/props/#disabled","title":"disabled","text":"Type Default boolean false <p>If true, disable the component. The effect may vary depending on the component type</p> <p></p> <p></p>"},{"location":"shared/props/#onkeydown","title":"onKeyDown","text":"Type Default (keyEvent : any) =&gt; void / <p>Custom callback triggered when a key is pressed while using the component (for example, when writing text inside an <code>Input</code> component).</p> <p></p> <p></p>"},{"location":"shared/props/#onfocus","title":"onFocus","text":"Type Default () =&gt; void / <p>Custom callback triggered when the component get the focus (for example, through tab key)</p> <p></p> <p></p>"},{"location":"shared/props/#onfocuslost","title":"onFocusLost","text":"Type Default () =&gt; void / <p>Custom callback triggered when the component lose the focus (for example, when user clicks outside it)</p> <p></p> <p></p>"},{"location":"shared/props/#additionalprops","title":"additionalProps","text":"Type Default Record / <p>Custom additional properties, applied to the component</p> <p></p> <p></p>"},{"location":"shared/props/#a11y","title":"a11y","text":"Type Default boolean true <p>Enable/disable accessibility features</p> <p></p> <p></p>"},{"location":"shared/props/#a11ylabel","title":"a11yLabel","text":"Type Default string / <p>If <code>a11y</code> = <code>true</code>, is used as aria-label accessibility parameter</p> <p></p> <p></p>"},{"location":"shared/props/#tabindex","title":"tabIndex","text":"Type Default number | string / <p>Regular tabIndex a11y parameter. If <code>a11y</code> = <code>true</code>, this parameter is passed as <code>tabIndex</code> prop to the component (if not set, its value will be <code>0</code>). If <code>a11y</code> = <code>false</code>, it is set to <code>-1</code> (so the component is not focusable through <code>tab</code> key`)</p> <p></p>"}]}